{"ast":null,"code":"import { CREATE_MODULE, DELETE_MODULE, UPDATE_MODULE, SET_SELECTED_COURSE } from '../actions/moduleActions';\nconst initialState = {\n  modules: []\n};\n\nconst moduleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SELECTED_COURSE:\n      // you can probably reference action.courseId here.\n      // Call the service to get all the modules for action.courseId, and set the modules\n      // in the state to the new modules.\n      return {\n        modules: action.modules\n      };\n\n    case CREATE_MODULE:\n      return {\n        modules: [...state.modules, action.newModule]\n      };\n\n    case DELETE_MODULE:\n      return {\n        modules: state.modules.filter(module => module._id !== action.moduleId)\n      };\n\n    case UPDATE_MODULE:\n      return {\n        modules: state.modules.map(module => module._id === action.moduleId ? action.module : module)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default moduleReducer;","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/reducers/moduleReducer.js"],"names":["CREATE_MODULE","DELETE_MODULE","UPDATE_MODULE","SET_SELECTED_COURSE","initialState","modules","moduleReducer","state","action","type","newModule","filter","module","_id","moduleId","map"],"mappings":"AAAA,SACEA,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,mBAJF,QAKO,0BALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACtD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,mBAAL;AACE;AACA;AACA;AACA,aAAO;AAACE,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAAjB,OAAP;;AACF,SAAKL,aAAL;AACE,aAAO;AAACK,QAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBG,MAAM,CAACE,SAA1B;AAAV,OAAP;;AACF,SAAKT,aAAL;AACE,aAAO;AAACI,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAArD;AAAV,OAAP;;AACF,SAAKZ,aAAL;AACE,aAAO;AAACG,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcU,GAAd,CAAkBH,MAAM,IACvCA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAAtB,GAAiCN,MAAM,CAACI,MAAxC,GAAiDA,MADlC;AAAV,OAAP;;AAEF;AACE,aAAOL,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,aAAf","sourcesContent":["import {\n  CREATE_MODULE,\n  DELETE_MODULE,\n  UPDATE_MODULE,\n  SET_SELECTED_COURSE}\n  from '../actions/moduleActions'\n\nconst initialState = {\n  modules: []\n};\n\nconst moduleReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SELECTED_COURSE:\n      // you can probably reference action.courseId here.\n      // Call the service to get all the modules for action.courseId, and set the modules\n      // in the state to the new modules.\n      return {modules: action.modules};\n    case CREATE_MODULE:\n      return {modules: [...state.modules, action.newModule]};\n    case DELETE_MODULE:\n      return {modules: state.modules.filter(module => module._id !== action.moduleId)};\n    case UPDATE_MODULE:\n      return {modules: state.modules.map(module =>\n        module._id === action.moduleId ? action.module : module)};\n    default:\n      return state\n  }\n};\n\nexport default moduleReducer\n"]},"metadata":{},"sourceType":"module"}