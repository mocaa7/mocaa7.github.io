{"ast":null,"code":"import _toConsumableArray from\"/Users/mocaa7/src/git-website/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{CREATE_LESSON,DELETE_LESSON,UPDATE_LESSON,FIND_ALL_LESSONS_FOR_MODULE}from\"../actions/lessonActions\";var lessonReducer=function lessonReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{lessons:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FIND_ALL_LESSONS_FOR_MODULE:return{lessons:action.lessons};case CREATE_LESSON:return{lessons:[].concat(_toConsumableArray(state.lessons),[action.newLesson])};case DELETE_LESSON:return{lessons:state.lessons.filter(function(lesson){return lesson._id!==action.lessonId;})};case UPDATE_LESSON:return{lessons:state.lessons.map(function(lesson){return lesson._id===action.lessonId?action.lesson:lesson;})};default:return state;}};export default lessonReducer;","map":{"version":3,"sources":["/Users/mocaa7/src/git-website/src/reducers/lessonReducer.js"],"names":["CREATE_LESSON","DELETE_LESSON","UPDATE_LESSON","FIND_ALL_LESSONS_FOR_MODULE","lessonReducer","state","lessons","action","type","newLesson","filter","lesson","_id","lessonId","map"],"mappings":"wHAAA,OACEA,aADF,CAEEC,aAFF,CAGEC,aAHF,CAIEC,2BAJF,KAKO,0BALP,CAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1B,CAACC,OAAO,CAAE,EAAV,CAA0B,IAAXC,CAAAA,MAAW,2CACvD,OAAOA,MAAM,CAACC,IAAd,EACE,IAAKL,CAAAA,2BAAL,CACE,MAAO,CAACG,OAAO,CAAEC,MAAM,CAACD,OAAjB,CAAP,CACF,IAAKN,CAAAA,aAAL,CACE,MAAO,CAACM,OAAO,8BAAMD,KAAK,CAACC,OAAZ,GAAqBC,MAAM,CAACE,SAA5B,EAAR,CAAP,CACF,IAAKR,CAAAA,aAAL,CACE,MAAO,CAACK,OAAO,CAAED,KAAK,CAACC,OAAN,CAAcI,MAAd,CACf,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,GAAP,GAAeL,MAAM,CAACM,QAA1B,EADS,CAAV,CAAP,CAEF,IAAKX,CAAAA,aAAL,CACE,MAAO,CAACI,OAAO,CAAED,KAAK,CAACC,OAAN,CAAcQ,GAAd,CAAkB,SAAAH,MAAM,QACvCA,CAAAA,MAAM,CAACC,GAAP,GAAeL,MAAM,CAACM,QAAtB,CAAiCN,MAAM,CAACI,MAAxC,CAAiDA,MADV,EAAxB,CAAV,CAAP,CAEF,QACE,MAAON,CAAAA,KAAP,CAZJ,CAcD,CAfD,CAiBA,cAAeD,CAAAA,aAAf","sourcesContent":["import {\n  CREATE_LESSON,\n  DELETE_LESSON,\n  UPDATE_LESSON,\n  FIND_ALL_LESSONS_FOR_MODULE}\n  from \"../actions/lessonActions\";\n\nconst lessonReducer = (state = {lessons: []}, action) => {\n  switch(action.type) {\n    case FIND_ALL_LESSONS_FOR_MODULE:\n      return {lessons: action.lessons};\n    case CREATE_LESSON:\n      return {lessons: [...state.lessons, action.newLesson]};\n    case DELETE_LESSON:\n      return {lessons: state.lessons.filter(\n        lesson => lesson._id !== action.lessonId)};\n    case UPDATE_LESSON:\n      return {lessons: state.lessons.map(lesson =>\n        lesson._id === action.lessonId ? action.lesson : lesson)};\n    default:\n      return state\n  }\n};\n\nexport default lessonReducer"]},"metadata":{},"sourceType":"module"}