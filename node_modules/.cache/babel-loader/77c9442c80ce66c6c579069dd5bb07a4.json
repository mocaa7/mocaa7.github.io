{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget } from '../../../actions/widgetActions';\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport WidgetService from '../../../services/WidgetService';\nconst service = new WidgetService();\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topWidget: null,\n      bottomWidget: null,\n      widgets: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateWidgets();\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    await this.props.createWidget(this.props.widgetId);\n    this.updateWidget();\n  }\n\n  async onDelete(widgetId) {\n    await this.props.deleteWidget(widgetId);\n    await this.updateWidgets();\n  }\n\n  async onSave(widgetId, newWidget) {\n    await this.props.updateWidget(widgetId, newWidget);\n    await this.updateWidgets();\n  }\n\n} // const WidgetListComponent = ({widgets}) =>\n//     <div className=\"row\">\n//       <div className=\"col container fluid wbdv-widget-info\">\n//         <div className=\"row wbdv-margin-below\">\n//           <div className=\"col wbdv-heading-widget\">\n//             <a className=\"fa fa-times pt-1 pr-2\"\n//                onClick=\"window.location.href='#';\"/>\n//             <h4>List Widget</h4>\n//             <ul>\n//             {\n//               widgets.map(widget =>\n//                   <WidgetListItemComponent key={widget._id} widget={widget}/>)\n//             }\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>;\n\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => service.createWidget(topicId, {\n      title: 'New widget',\n      widgetType: 'HEADING'\n    }).then(actualWidget => dispatch(createWidget(actualWidget, topicId))),\n    findAllWidgetsForTopic: lessonId => service.findWidgetsForTopic(lessonId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: (widgetId, widget) => service.updateWidget(widgetId, widget).then(updatedWidget => dispatch(updateWidget(updatedWidget))),\n    deleteWidget: widgetId => service.deleteWidget(widgetId).then(status => dispatch(deleteWidget(widgetId)))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","WidgetListItemComponent","WidgetService","service","WidgetListComponent","Component","constructor","props","state","topWidget","bottomWidget","widgets","componentDidMount","updateWidgets","findWidgetsForTopic","topicId","setState","addWidget","widgetId","onDelete","onSave","newWidget","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","title","widgetType","then","actualWidget","lessonId","actualWidgets","widget","updatedWidget","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport {createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget} from '../../../actions/widgetActions'\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport WidgetService from '../../../services/WidgetService'\n\nconst service = new WidgetService();\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state={\n      topWidget: null,\n      bottomWidget: null,\n      widgets: []\n    }\n  }\n\n  componentDidMount() {\n    this.updateWidgets();\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({widgets: widgets});\n  }\n\n  async addWidget() {\n    await this.props.createWidget(this.props.widgetId);\n    this.updateWidget();\n  }\n\n  async onDelete(widgetId) {\n    await this.props.deleteWidget(widgetId);\n    await this.updateWidgets();\n  }\n\n  async onSave(widgetId, newWidget) {\n    await this.props.updateWidget(widgetId, newWidget);\n    await this.updateWidgets();\n  }\n\n\n}\n\n// const WidgetListComponent = ({widgets}) =>\n//     <div className=\"row\">\n//       <div className=\"col container fluid wbdv-widget-info\">\n//         <div className=\"row wbdv-margin-below\">\n//           <div className=\"col wbdv-heading-widget\">\n//             <a className=\"fa fa-times pt-1 pr-2\"\n//                onClick=\"window.location.href='#';\"/>\n//             <h4>List Widget</h4>\n//             <ul>\n//             {\n//               widgets.map(widget =>\n//                   <WidgetListItemComponent key={widget._id} widget={widget}/>)\n//             }\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>;\n\nconst stateToPropertyMapper = (state) => {\n  return {\n      widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n      createWidget: (topicId) =>\n          service.createWidget(topicId, {title: 'New widget', widgetType: 'HEADING'})\n          .then(actualWidget =>\n              dispatch(createWidget(actualWidget, topicId))),\n\n      findAllWidgetsForTopic: (lessonId) =>\n          service.findWidgetsForTopic(lessonId)\n          .then(actualWidgets =>\n              dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n      updateWidget: (widgetId, widget) =>\n          service.updateWidget(widgetId, widget)\n          .then(updatedWidget =>\n              dispatch(updateWidget(updatedWidget))),\n\n      deleteWidget: (widgetId) =>\n          service.deleteWidget(widgetId)\n          .then(status =>\n              dispatch(deleteWidget(widgetId)))\n  }\n};\n\nexport default connect(\n  stateToPropertyMapper,\n  dispatchToPropertyMapper)\n(WidgetListComponent)"]},"metadata":{},"sourceType":"module"}