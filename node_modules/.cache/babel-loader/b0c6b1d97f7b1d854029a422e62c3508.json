{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport '../../CourseManager/CourseManager.css';\nimport { createModule, deleteModule, findAllModulesForCourse, updateModule } from '../../../actions/moduleActions';\nimport ModuleService from '../../../services/ModuleService';\nimport ModuleListItem from './ModuleListItem';\nconst service = new ModuleService();\n\nclass ModuleListComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedModuleId: null,\n      modules: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateModules();\n  }\n\n  async updateModules() {\n    const modules = await service.findModulesForCourse(this.props.courseId);\n    this.setState({\n      modules: modules\n    });\n  }\n\n  async addModule() {\n    await this.props.createModule(this.props.courseId);\n    this.updateModules();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group wbdv-module-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.modules && this.state.modules.map(module => React.createElement(ModuleListItem, {\n      key: module._id,\n      isSelected: module._id === this.state.selectedModuleId,\n      module: module,\n      onSelect: this.onSelect.bind(this, module._id),\n      onDelete: this.onDelete.bind(this, module._id),\n      onSave: this.onSave.bind(this, module._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))), React.createElement(\"i\", {\n      className: \"fa fa-plus-circle fa-3x wbdv-add\",\n      onClick: () => this.addModule(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n  onSelect(moduleId) {\n    this.setState({\n      selectedModuleId: moduleId\n    });\n    this.props.history.push(`/course/${this.props.courseId}/module/${moduleId}`);\n  }\n\n  async onDelete(moduleId) {\n    this.setState({\n      selectedModuleId: moduleId\n    });\n    await this.props.deleteModule(moduleId);\n    await this.updateModules();\n  }\n\n  async onSave(moduleId, newModule) {\n    console.log(`Saving module ${moduleId} with content ${JSON.stringify(newModule)}`);\n    await this.props.updateModule(moduleId, newModule);\n    await this.updateModules();\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    modules: state.modules.modules\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createModule: courseId => service.createModule(courseId, {\n      title: 'New module'\n    }).then(actualModule => dispatch(createModule(actualModule, courseId))),\n    findAllModulesForCourse: courseId => service.findModulesForCourse(courseId).then(actualModules => dispatch(findAllModulesForCourse(actualModules))),\n    updateModule: (moduleId, module) => service.updateModule(moduleId, module).then(updatedModule => dispatch(updateModule(updatedModule))),\n    deleteModule: moduleId => service.deleteModule(moduleId).then(status => dispatch(deleteModule(moduleId)))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(ModuleListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListComponent.js"],"names":["React","connect","createModule","deleteModule","findAllModulesForCourse","updateModule","ModuleService","ModuleListItem","service","ModuleListComponent","Component","state","selectedModuleId","modules","componentDidMount","updateModules","findModulesForCourse","props","courseId","setState","addModule","render","map","module","_id","onSelect","bind","onDelete","onSave","moduleId","history","push","newModule","console","log","JSON","stringify","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","title","then","actualModule","actualModules","updatedModule","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport '../../CourseManager/CourseManager.css'\nimport {createModule, deleteModule, findAllModulesForCourse, updateModule} from '../../../actions/moduleActions'\nimport ModuleService from '../../../services/ModuleService';\nimport ModuleListItem from './ModuleListItem';\n\nconst service = new ModuleService();\n\nclass ModuleListComponent extends React.Component {\n    componentDidMount() {\n      this.updateModules();\n    }\n\n    async updateModules() {\n      const modules = await service.findModulesForCourse(this.props.courseId);\n      this.setState({modules: modules});\n    }\n\n    async addModule() {\n      await this.props.createModule(this.props.courseId);\n      this.updateModules();\n    }\n\n    render() {\n        return (\n          <div>\n            <ul className=\"list-group wbdv-module-list\">\n                {this.state.modules && this.state.modules.map(module =>\n                    <ModuleListItem\n                      key={module._id}\n                      isSelected={module._id === this.state.selectedModuleId}\n                      module={module}\n                      onSelect={this.onSelect.bind(this, module._id)}\n                      onDelete={this.onDelete.bind(this, module._id)}\n                      onSave={this.onSave.bind(this, module._id)}\n                      />\n                )}\n                </ul>\n                <i className=\"fa fa-plus-circle fa-3x wbdv-add\"\n                  onClick={() => this.addModule()}/>\n            </div>\n        );\n    }\n\n    state = {\n      selectedModuleId: null,\n      modules: [],\n    }\n\n    onSelect(moduleId) {\n      this.setState({selectedModuleId: moduleId});\n      this.props.history.push(`/course/${this.props.courseId}/module/${moduleId}`)\n    }\n\n    async onDelete(moduleId) {\n      this.setState({selectedModuleId: moduleId});\n      await this.props.deleteModule(moduleId);\n      await this.updateModules();\n    }\n\n    async onSave(moduleId, newModule) {\n      console.log(`Saving module ${moduleId} with content ${JSON.stringify(newModule)}`);\n      await this.props.updateModule(moduleId, newModule);\n      await this.updateModules();\n    }\n}\n\nconst stateToPropertyMapper = (state) => {\n    return {\n        modules: state.modules.modules\n    }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        createModule: (courseId) =>\n            service.createModule(courseId, {title: 'New module'})\n            .then(actualModule =>\n                dispatch(createModule(actualModule, courseId))),\n\n        findAllModulesForCourse: (courseId) =>\n            service.findModulesForCourse(courseId)\n            .then(actualModules =>\n                dispatch(findAllModulesForCourse(actualModules))),\n\n        updateModule: (moduleId, module) =>\n            service.updateModule(moduleId, module)\n            .then(updatedModule =>\n                dispatch(updateModule(updatedModule))),\n\n        deleteModule: (moduleId) =>\n            service.deleteModule(moduleId)\n            .then(status =>\n                dispatch(deleteModule(moduleId)))\n    }\n}\n\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper)\n(ModuleListComponent)"]},"metadata":{},"sourceType":"module"}