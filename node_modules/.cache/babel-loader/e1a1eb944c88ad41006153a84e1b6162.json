{"ast":null,"code":"import { CREATE_MODULE, DELETE_MODULE, UPDATE_MODULE, FIND_MODULES_FOR_COURSE } from '../actions/moduleActions';\nconst initialState = {\n  modules: []\n};\n\nconst moduleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FIND_MODULES_FOR_COURSE:\n      return {\n        modules: action.modules\n      };\n\n    case CREATE_MODULE:\n      return {\n        modules: [...state.modules, action.newModule]\n      };\n\n    case DELETE_MODULE:\n      return {\n        modules: state.modules.filter(module => module._id !== action.moduleId)\n      };\n\n    case UPDATE_MODULE:\n      return {\n        modules: state.modules.map(module => module._id === action.moduleId ? action.module : module)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default moduleReducer;","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/reducers/moduleReducer.js"],"names":["CREATE_MODULE","DELETE_MODULE","UPDATE_MODULE","FIND_MODULES_FOR_COURSE","initialState","modules","moduleReducer","state","action","type","newModule","filter","module","_id","moduleId","map"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,aAAvB,EAAsCC,aAAtC,EAAqDC,uBAArD,QACO,0BADP;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACtD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,uBAAL;AACE,aAAO;AACLE,QAAAA,OAAO,EAAEG,MAAM,CAACH;AADX,OAAP;;AAGF,SAAKL,aAAL;AACE,aAAO;AACLK,QAAAA,OAAO,EAAE,CACP,GAAGE,KAAK,CAACF,OADF,EAEPG,MAAM,CAACE,SAFA;AADJ,OAAP;;AAMF,SAAKT,aAAL;AACE,aAAO;AACLI,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAArD;AADJ,OAAP;;AAGF,SAAKZ,aAAL;AACE,aAAO;AACLG,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcU,GAAd,CAAkBH,MAAM,IAC7BA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAAtB,GAAiCN,MAAM,CAACI,MAAxC,GAAiDA,MAD5C;AADJ,OAAP;;AAKF;AACE,aAAOL,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,aAAf","sourcesContent":["import {CREATE_MODULE, DELETE_MODULE, UPDATE_MODULE, FIND_MODULES_FOR_COURSE}\n  from '../actions/moduleActions'\n\nconst initialState = {\n  modules: [\n  ]\n};\n\nconst moduleReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case FIND_MODULES_FOR_COURSE:\n      return {\n        modules: action.modules\n      };\n    case CREATE_MODULE:\n      return {\n        modules: [\n          ...state.modules,\n          action.newModule\n        ]\n      };\n    case DELETE_MODULE:\n      return {\n        modules: state.modules.filter(module => module._id !== action.moduleId)\n      };\n    case UPDATE_MODULE:\n      return {\n        modules: state.modules.map(module =>\n            module._id === action.moduleId ? action.module : module\n        )\n      };\n    default:\n      return state\n  }\n}\n\nexport default moduleReducer\n"]},"metadata":{},"sourceType":"module"}