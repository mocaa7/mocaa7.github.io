{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget, saveAllWidgets, moveWidgetUp, moveWidgetDown } from '../../../actions/widgetActions';\nimport store from '../CourseEditorComponentStateful';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nimport WidgetBarComponent from \"./WidgetBarComponent\";\nconst service = new WidgetService();\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\nconst DEFAULT_SIZE = 1;\n\nconst headingWidget = ({\n  id\n}) => {\n  return {\n    id: id,\n    name: \"\",\n    widgetType: HEADING,\n    widgetOrder: -1,\n    width: -1,\n    height: -1,\n    cssClass: \"\",\n    style: \"\",\n    value: \"\",\n    text: \"\",\n    size: DEFAULT_SIZE\n  };\n};\n\nconst paragraphWidget = ({\n  id\n}) => {\n  return {\n    id: id,\n    name: \"\",\n    widgetType: PARAGRAPH,\n    widgetOrder: -1,\n    width: -1,\n    height: -1,\n    cssClass: \"\",\n    style: \"\",\n    value: \"\",\n    text: \"\"\n  };\n};\n\nconst imageWidget = ({\n  id\n}) => {\n  return {\n    id: id,\n    name: \"\",\n    widgetType: IMAGE,\n    widgetOrder: -1,\n    width: -1,\n    height: -1,\n    cssClass: \"\",\n    style: \"\",\n    value: \"\",\n    url: \"\"\n  };\n};\n\nconst listWidget = ({\n  id\n}) => {\n  return {\n    id: id,\n    name: \"\",\n    widgetType: LIST,\n    widgetOrder: -1,\n    width: -1,\n    height: -1,\n    cssClass: \"\",\n    style: \"\",\n    value: \"\",\n    items: \"\",\n    ordered: false\n  };\n};\n\nconst getWidgetByType = ({\n  widgetId,\n  type\n}) => {\n  switch (type) {\n    case PARAGRAPH:\n      return paragraphWidget(widgetId);\n\n    case IMAGE:\n      return imageWidget(widgetId);\n\n    case LIST:\n      return listWidget(widgetId);\n\n    default:\n      return headingWidget(widgetId);\n  }\n};\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: []\n    };\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    newWidget = headingWidget();\n    newWidget.id = new Date().getTime(); // this.props.createWidget(this.props.topicId);\n\n    this.setState({\n      widgets: [...this.state.widgets, newWidget]\n    }); // this.setState({\n    //   widgets: [...this.state.widgets,\n    //   { name: '', widgetType: 'Heading', id: (new Date()).getTime() + \"\" }]\n    // })\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    this.setState({\n      widgets: newWidgets\n    }); // this.props.deleteWidget(widgetId);\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].widgetOrder = x;\n    widgets[y].widgetOrder = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index - 1)\n    }); // this.props.moveWidgetUp(widget, this.state.widgets[index - 1]);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index + 1)\n    }); // this.props.moveWidgetDown(widget, this.state.widgets[index + 1]);\n  }\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget => widget.id === newWidget.id ? newWidget : widget)\n    }); // this.props.updateWidget(newWidget);\n  } // TODO: ALL THESE ARE UPDATE FUNCTIONS\n  // UTILIZE UPDATE WIDGET TO UPDATE ALL OF THESE\n\n\n  updateWidgetType(widgetId, type) {\n    let newWidget = getWidgetByType(widgetId, type);\n    this.updateWidget; // let newWidget = { ...widget, topicId: this.props.topicId, widgetType: type };\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetName(widget, newName) {\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      name: newName\n    };\n    console.log(newWidget.name); // TODO\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetContent(widget, newText) {\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      text: newText\n    };\n    console.log(newWidget.text); // TODO\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateHeadingSize(widget, heading) {\n    let c = heading[heading.length - 1];\n    let size = parseInt(c);\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      size: size\n    };\n    console.log(newWidget.headingSize); // TODO\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(widget);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(SaveAndPreviewComponent, {\n      saveAll: this.onSaveAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.widgets && this.state.widgets.map((widget, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col container fluid wbdv-widget info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(WidgetBarComponent, {\n      type: !widget.widgetType ? HEADING : widget.widgetType,\n      widget: widget,\n      widgetOrder: index,\n      getLastElement: this.getLastElement.bind(this),\n      moveUp: this.moveUp.bind(this, widget),\n      moveDown: this.moveDown.bind(this, widget),\n      updateWidgetType: this.updateWidgetType.bind(this, widget.id),\n      onDelete: this.onDelete.bind(this, widget.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), (!widget.widgetType || widget.widgetType === HEADING) && React.createElement(HeadingWidgetComponent, {\n      key: widget.id,\n      widget: widget,\n      size: widget.size ? widget.size : DEFAULT_SIZE,\n      name: widget.name ? '' : widget.name,\n      text: widget.text ? '' : widget.text,\n      updateWidgetContent: this.updateWidgetContent.bind(this, widget) // TODO REMOVE FOLLOWING 3 WHEN CAN\n      ,\n      updateHeadingSize: this.updateHeadingSize.bind(this, widget),\n      updateWidgetName: this.updateWidgetName.bind(this, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), widget.widgetType === PARAGRAPH && React.createElement(ParagraphWidgetComponent, {\n      key: widget.id,\n      widget: widget,\n      name: widget.name ? '' : widget.name,\n      text: widget.text ? '' : widget.text,\n      updateWidgetContent: this.updateWidgetContent.bind(this, widget) // TODO REMOVE FOLLOWING 2 WHEN CAN\n      ,\n      updateWidgetName: this.updateWidgetName.bind(this, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"nav-item\",\n      onClick: () => this.addWidget(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"nav-link fa fa-plus-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => dispatch(createWidget(topicId)),\n    findAllWidgetsForTopic: topicId => service.findWidgetsForTopic(topicId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: widget => dispatch(updateWidget(widget)),\n    deleteWidget: widgetId => dispatch(deleteWidget(widgetId)),\n    saveAllWidgets: (topicId, widgets) => service.saveAllWidgets(topicId, widgets).then(returnedWidgets => dispatch(saveAllWidgets(returnedWidgets))),\n    moveWidgetUp: (widget, other) => dispatch(moveWidgetUp(widget, other)),\n    moveWidgetDown: (widget, other) => dispatch(moveWidgetDown(widget, other))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","saveAllWidgets","moveWidgetUp","moveWidgetDown","store","HeadingWidgetComponent","ParagraphWidgetComponent","SaveAndPreviewComponent","WidgetService","WidgetBarComponent","service","HEADING","PARAGRAPH","IMAGE","LIST","DEFAULT_SIZE","headingWidget","id","name","widgetType","widgetOrder","width","height","cssClass","style","value","text","size","paragraphWidget","imageWidget","url","listWidget","items","ordered","getWidgetByType","widgetId","type","WidgetListComponent","Component","constructor","props","state","widgets","updateWidgets","componentDidUpdate","prevProps","topicId","onSaveAll","getLastElement","length","findWidgetsForTopic","setState","addWidget","newWidget","Date","getTime","onDelete","newWidgets","filter","widget","swapElements","x","y","temp","moveUp","index","indexOf","moveDown","map","updateWidgetType","updateWidgetName","newName","console","log","updateWidgetContent","newText","updateHeadingSize","heading","c","parseInt","headingSize","render","bind","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualWidgets","returnedWidgets","other"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport {\n  createWidget,\n  deleteWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  saveAllWidgets,\n  moveWidgetUp,\n  moveWidgetDown\n} from '../../../actions/widgetActions';\nimport store from '../CourseEditorComponentStateful';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nimport WidgetBarComponent from \"./WidgetBarComponent\";\n\nconst service = new WidgetService();\n\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\n\nconst DEFAULT_SIZE = 1;\n\nconst headingWidget = ({id}) => {\n  return { id: id, name: \"\", widgetType: HEADING, widgetOrder: -1, width: -1, height: -1, cssClass: \"\", style: \"\", value: \"\", text: \"\", size: DEFAULT_SIZE };\n}\nconst paragraphWidget = ({id}) => {\n  return { id: id, name: \"\", widgetType: PARAGRAPH, widgetOrder: -1, width: -1, height: -1, cssClass: \"\", style: \"\", value: \"\", text: \"\" };\n}\nconst imageWidget = ({id}) => {\n  return { id: id, name: \"\", widgetType: IMAGE, widgetOrder: -1, width: -1, height: -1, cssClass: \"\", style: \"\", value: \"\", url: \"\" };\n}\nconst listWidget = ({id}) => {\n  return { id: id, name: \"\", widgetType: LIST, widgetOrder: -1, width: -1, height: -1, cssClass: \"\", style: \"\", value: \"\", items: \"\", ordered: false };\n}\n\nconst getWidgetByType = ({widgetId, type}) => {\n  switch(type) {\n    case PARAGRAPH:\n      return paragraphWidget(widgetId);\n    case IMAGE:\n      return imageWidget(widgetId);\n    case LIST:\n      return listWidget(widgetId);\n    default:\n      return headingWidget(widgetId);\n  }\n}\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      widgets: [],\n    };\n\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({ widgets: widgets });\n  }\n\n  async addWidget() {\n    newWidget = headingWidget();\n    newWidget.id = (new Date()).getTime();\n    // this.props.createWidget(this.props.topicId);\n\n    this.setState({widgets: [...this.state.widgets, newWidget]});\n    // this.setState({\n    //   widgets: [...this.state.widgets,\n    //   { name: '', widgetType: 'Heading', id: (new Date()).getTime() + \"\" }]\n    // })\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    this.setState({ widgets: newWidgets });\n    // this.props.deleteWidget(widgetId);\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].widgetOrder = x;\n    widgets[y].widgetOrder = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index - 1) });\n\n    // this.props.moveWidgetUp(widget, this.state.widgets[index - 1]);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index + 1) });\n\n    // this.props.moveWidgetDown(widget, this.state.widgets[index + 1]);\n  }\n\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget =>\n        widget.id === newWidget.id ? newWidget : widget)\n    });\n    // this.props.updateWidget(newWidget);\n  }\n\n  // TODO: ALL THESE ARE UPDATE FUNCTIONS\n  // UTILIZE UPDATE WIDGET TO UPDATE ALL OF THESE\n\n  updateWidgetType(widgetId, type) {\n    let newWidget = getWidgetByType(widgetId, type);\n    this.updateWidget\n\n\n\n\n    // let newWidget = { ...widget, topicId: this.props.topicId, widgetType: type };\n\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetName(widget, newName) {\n    let newWidget = { ...widget, topicId: this.props.topicId, name: newName };\n    console.log(newWidget.name); // TODO\n\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetContent(widget, newText) {\n    let newWidget = { ...widget, topicId: this.props.topicId, text: newText };\n    console.log(newWidget.text); // TODO\n\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateHeadingSize(widget, heading) {\n    let c = heading[heading.length - 1];\n    let size = parseInt(c);\n    let newWidget = { ...widget, topicId: this.props.topicId, size: size };\n    console.log(newWidget.headingSize); // TODO\n\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(widget);\n  }\n\n  render() {\n    return (\n      <span>\n        <SaveAndPreviewComponent\n          saveAll={this.onSaveAll.bind(this)} />\n        <div>\n          {this.state.widgets && this.state.widgets.map((widget, index) =>\n            <div>\n              <div className={\"col container fluid wbdv-widget info\"}>\n                <WidgetBarComponent\n                  type={!widget.widgetType ? HEADING : widget.widgetType}\n                  widget={widget}\n                  widgetOrder={index}\n                  getLastElement={this.getLastElement.bind(this)}\n                  moveUp={this.moveUp.bind(this, widget)}\n                  moveDown={this.moveDown.bind(this, widget)}\n                  updateWidgetType={this.updateWidgetType.bind(this, widget.id)}\n                  onDelete={this.onDelete.bind(this, widget.id)} />\n\n                {(!widget.widgetType || widget.widgetType === HEADING) &&\n                  <HeadingWidgetComponent\n                    key={widget.id}\n                    widget={widget}\n                    size={widget.size ? widget.size : DEFAULT_SIZE}\n                    name={widget.name ? '' : widget.name}\n                    text={widget.text ? '' : widget.text}\n                    updateWidgetContent={this.updateWidgetContent.bind(this, widget)} // TODO REMOVE FOLLOWING 3 WHEN CAN\n                    updateHeadingSize={this.updateHeadingSize.bind(this, widget)}\n                    updateWidgetName={this.updateWidgetName.bind(this, widget)} />}\n\n                {widget.widgetType === PARAGRAPH &&\n                  <ParagraphWidgetComponent\n                    key={widget.id}\n                    widget={widget}\n                    name={widget.name ? '' : widget.name}\n                    text={widget.text ? '' : widget.text}\n                    updateWidgetContent={this.updateWidgetContent.bind(this, widget)} // TODO REMOVE FOLLOWING 2 WHEN CAN\n                    updateWidgetName={this.updateWidgetName.bind(this, widget)} />}\n              </div>\n            </div>\n          )\n          }\n          <div className=\"nav-item\" onClick={() => this.addWidget()}>\n            <i className=\"nav-link fa fa-plus-circle fa-2x\" />\n          </div>\n        </div>\n      </span>\n    )\n  }\n}\n\nconst stateToPropertyMapper = (state) => {\n  return {\n    widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    createWidget: (topicId) =>\n      dispatch(createWidget(topicId)),\n\n    findAllWidgetsForTopic: (topicId) =>\n      service.findWidgetsForTopic(topicId)\n        .then(actualWidgets =>\n          dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n    updateWidget: (widget) =>\n      dispatch(updateWidget(widget)),\n\n    deleteWidget: (widgetId) =>\n      dispatch(deleteWidget(widgetId)),\n\n    saveAllWidgets: (topicId, widgets) =>\n      service.saveAllWidgets(topicId, widgets)\n        .then(returnedWidgets =>\n          dispatch(saveAllWidgets(returnedWidgets))),\n\n    moveWidgetUp: (widget, other) =>\n      dispatch(moveWidgetUp(widget, other)),\n\n    moveWidgetDown: (widget, other) =>\n      dispatch(moveWidgetDown(widget, other))\n  }\n};\n\nexport default connect(\n  stateToPropertyMapper,\n  dispatchToPropertyMapper)\n  (WidgetListComponent)"]},"metadata":{},"sourceType":"module"}