{"ast":null,"code":"const oldUrl = 'https://wbdv-generic-server.herokuapp.com/api/001367674';\nconst localUrl = 'http://localhost:8080/api';\nconst herokuUrl = 'https://serene-island-60523.herokuapp.com/api';\n\nconst getBaseUrl = () => herokuUrl;\n\nclass WidgetService {\n  async createWidget(topicId, widget) {\n    const response = await fetch(`${getBaseUrl()}/topics/${topicId}/widgets`, {\n      method: 'POST',\n      body: JSON.stringify(widget),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    return await response.json();\n  }\n\n  async findWidgetsForTopic(topicId) {\n    const response = await fetch(`${getBaseUrl()}/topics/${topicId}/widgets`);\n    return await response.json();\n  }\n\n  async updateWidget(widgetId, widget) {\n    const response = await fetch(`${getBaseUrl()}/widgets/${widgetId}`, {\n      method: 'PUT',\n      body: JSON.stringify(widget),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    return await response.json();\n  }\n\n  async deleteWidget(widgetId) {\n    const response = await fetch(`${getBaseUrl()}/widgets/${widgetId}`, {\n      method: 'DELETE'\n    });\n    return await response.json();\n  }\n\n  async saveAllWidgets(topicId, widgets) {\n    const response = await fetch(`${getBaseUrl()}/topics/${topicId}/widgets`, {\n      method: 'PUT',\n      body: JSON.stringify(widgets),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    return await response.json();\n  }\n\n  async findAllWidgets() {\n    const response = await fetch(`${getBaseUrl()}/widgets`);\n    return await response.json();\n  }\n\n  async findWidgetById(widgetId) {\n    const response = await fetch(`${getBaseUrl()}/widgets/${widgetId}`);\n    return await response.json();\n  }\n\n}\n\nexport default WidgetService;","map":{"version":3,"sources":["/Users/mocaa7/src/git-website/src/services/WidgetService.js"],"names":["oldUrl","localUrl","herokuUrl","getBaseUrl","WidgetService","createWidget","topicId","widget","response","fetch","method","body","JSON","stringify","headers","json","findWidgetsForTopic","updateWidget","widgetId","deleteWidget","saveAllWidgets","widgets","findAllWidgets","findWidgetById"],"mappings":"AAAA,MAAMA,MAAM,GAAG,yDAAf;AACA,MAAMC,QAAQ,GAAG,2BAAjB;AACA,MAAMC,SAAS,GAAG,+CAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAMD,SAAzB;;AAEA,MAAME,aAAN,CAAoB;AAChB,QAAMC,YAAN,CAAmBC,OAAnB,EAA4BC,MAA5B,EAAoC;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,WAAUG,OAAQ,UAAnC,EAA8C;AACtEI,MAAAA,MAAM,EAAE,MAD8D;AAEtEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAFgE;AAGtEO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAH6D,KAA9C,CAA5B;AAKA,WAAO,MAAMN,QAAQ,CAACO,IAAT,EAAb;AACH;;AAED,QAAMC,mBAAN,CAA0BV,OAA1B,EAAmC;AAC/B,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,WAAUG,OAAQ,UAAnC,CAA5B;AACA,WAAO,MAAME,QAAQ,CAACO,IAAT,EAAb;AACH;;AAED,QAAME,YAAN,CAAmBC,QAAnB,EAA6BX,MAA7B,EAAqC;AACnC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,YAAWe,QAAS,EAArC,EAAwC;AAClER,MAAAA,MAAM,EAAE,KAD0D;AAElEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAF4D;AAGlEO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHyD,KAAxC,CAA5B;AAKA,WAAO,MAAMN,QAAQ,CAACO,IAAT,EAAb;AACD;;AAED,QAAMI,YAAN,CAAmBD,QAAnB,EAA6B;AACzB,UAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,YAAWe,QAAS,EAArC,EAAwC;AAChER,MAAAA,MAAM,EAAE;AADwD,KAAxC,CAA5B;AAGA,WAAO,MAAMF,QAAQ,CAACO,IAAT,EAAb;AACH;;AAED,QAAMK,cAAN,CAAqBd,OAArB,EAA8Be,OAA9B,EAAuC;AACnC,UAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,WAAUG,OAAQ,UAAnC,EAA8C;AACtEI,MAAAA,MAAM,EAAE,KAD8D;AAEtEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeQ,OAAf,CAFgE;AAGtEP,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAH6D,KAA9C,CAA5B;AAKA,WAAO,MAAMN,QAAQ,CAACO,IAAT,EAAb;AACH;;AAED,QAAMO,cAAN,GAAuB;AACnB,UAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,UAAjB,CAA5B;AACA,WAAO,MAAMK,QAAQ,CAACO,IAAT,EAAb;AACH;;AAED,QAAMQ,cAAN,CAAqBL,QAArB,EAA+B;AAC3B,UAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,UAAU,EAAG,YAAWe,QAAS,EAArC,CAA5B;AACA,WAAO,MAAMV,QAAQ,CAACO,IAAT,EAAb;AACH;;AAhDe;;AAmDlB,eAAeX,aAAf","sourcesContent":["const oldUrl = 'https://wbdv-generic-server.herokuapp.com/api/001367674';\nconst localUrl = 'http://localhost:8080/api';\nconst herokuUrl = 'https://serene-island-60523.herokuapp.com/api';\n\nconst getBaseUrl = () => herokuUrl;\n\nclass WidgetService {\n    async createWidget(topicId, widget) {\n        const response = await fetch(`${getBaseUrl()}/topics/${topicId}/widgets`, {\n            method: 'POST',\n            body: JSON.stringify(widget),\n            headers: {'content-type': 'application/json'}\n        });\n        return await response.json();\n    }\n    \n    async findWidgetsForTopic(topicId) {\n        const response = await fetch(`${getBaseUrl()}/topics/${topicId}/widgets`);\n        return await response.json();\n    }\n  \n    async updateWidget(widgetId, widget) {\n      const response = await fetch(`${getBaseUrl()}/widgets/${widgetId}`, {\n        method: 'PUT',\n        body: JSON.stringify(widget),\n        headers: {'content-type': 'application/json'}\n      });\n      return await response.json();\n    }\n  \n    async deleteWidget(widgetId) {\n        const response = await fetch(`${getBaseUrl()}/widgets/${widgetId}`, {\n            method: 'DELETE'\n        });\n        return await response.json();\n    }\n\n    async saveAllWidgets(topicId, widgets) {\n        const response = await fetch(`${getBaseUrl()}/topics/${topicId}/widgets`, {\n            method: 'PUT',\n            body: JSON.stringify(widgets),\n            headers: {'content-type': 'application/json'}\n        });\n        return await response.json();\n    }\n\n    async findAllWidgets() {\n        const response = await fetch(`${getBaseUrl()}/widgets`);\n        return await response.json();\n    }\n    \n    async findWidgetById(widgetId) {\n        const response = await fetch(`${getBaseUrl()}/widgets/${widgetId}`);\n        return await response.json();\n    }\n  }\n  \n  export default WidgetService;"]},"metadata":{},"sourceType":"module"}