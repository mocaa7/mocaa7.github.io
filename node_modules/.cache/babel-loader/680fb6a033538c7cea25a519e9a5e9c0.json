{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget, saveAllWidgets, moveWidgetUp, moveWidgetDown } from '../../../actions/widgetActions';\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nconst service = new WidgetService();\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: []\n    };\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    const widgetState = await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n    const widgets = widgetState.widgets;\n    this.setState({\n      widgets: widgetState.widgets\n    });\n    alert('Your widgets have been saved!');\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    this.setState({\n      widgets: [...this.state.widgets, {\n        name: 'New widget',\n        widgetType: 'Heading',\n        id: new Date().getTime() + \"\"\n      }]\n    });\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    const widgetState = this.props.deleteWidget(widgetId, newWidgets);\n    this.setState({\n      widgets: widgetState.widgets\n    });\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index - 1)\n    });\n    this.props.moveWidgetUp(widget, this.state.widgets);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index + 1)\n    });\n    this.props.moveWidgetDown(widget, this.state.widgets);\n  }\n\n  updateWidgetType(widgetId, widget, type) {\n    // let type = event.target.value;\n    // if (type === this.state.type) return;\n    let newType = widget.widgetType === HEADING ? PARAGRAPH : HEADING;\n    let newWidget = { ...widget,\n      widgetType: newType\n    };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widgetId, widget, this.state.widgets);\n  }\n\n  updateWidgetName(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = { ...widget,\n      name: event.target.value\n    };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widgetId, newWidget, this.state.widgets);\n  }\n\n  updateWidgetContent(widgetId, widget, event) {\n    let newWidget = { ...widget,\n      content: event.target.value\n    };\n    console.log(newWidget.content);\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widgetId, newWidget, this.state.widgets);\n  }\n\n  updateHeadingSize(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = { ...widget,\n      headingSize: event.target.value\n    };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widgetId, widget, this.state.widgets);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(SaveAndPreviewComponent, {\n      saveAll: this.onSaveAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.widgets && this.state.widgets.map((widget, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(WidgetListItemComponent, {\n      key: widget.id,\n      getLastElement: this.getLastElement.bind(this),\n      widgetType: widget.widgetType === '' ? HEADING : widget.widgetType,\n      name: widget.name,\n      content: widget.content,\n      headingSize: widget.headingSize,\n      index: index,\n      widget: widget,\n      moveUp: this.moveUp.bind(this, widget),\n      moveDown: this.moveDown.bind(this, widget),\n      onDelete: this.onDelete.bind(this, widget.id),\n      updateWidgetType: this.updateWidgetType.bind(this, widget.id, widget),\n      updateWidgetName: this.updateWidgetName.bind(this, widget.id, widget),\n      updateWidgetContent: this.updateWidgetContent.bind(this, widget.id, widget),\n      updateHeadingSize: this.updateHeadingSize.bind(this, widget.id, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"nav-item\",\n      onClick: () => this.addWidget(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"nav-link fa fa-plus-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => service.createWidget(topicId, {\n      name: 'New widget',\n      widgetType: 'Heading'\n    }).then(actualWidget => dispatch(createWidget(actualWidget, topicId))),\n    findAllWidgetsForTopic: topicId => service.findWidgetsForTopic(topicId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: (widgetId, widget, widgets) => dispatch(updateWidget(widgetId, widget, widgets)),\n    // updateWidget: (widgetId, widget) =>\n    //     service.updateWidget(widgetId, widget)\n    //     .then(updatedWidget =>\n    //         dispatch(updateWidget(updatedWidget))),\n    deleteWidget: (widgetId, widgets) => dispatch(deleteWidget(widgetId, widgets)),\n    saveAllWidgets: (topicId, widgets) => service.saveAllWidgets(topicId, widgets).then(returnedWidgets => dispatch(saveAllWidgets(returnedWidgets))),\n    moveWidgetUp: widget => dispatch(moveWidgetUp(widget)),\n    moveWidgetDown: widget => dispatch(moveWidgetDown(widget))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","saveAllWidgets","moveWidgetUp","moveWidgetDown","WidgetListItemComponent","SaveAndPreviewComponent","WidgetService","service","HEADING","PARAGRAPH","WidgetListComponent","Component","constructor","props","state","widgets","updateWidgets","componentDidUpdate","prevProps","prevState","snapshot","topicId","onSaveAll","widgetState","setState","alert","getLastElement","length","findWidgetsForTopic","addWidget","name","widgetType","id","Date","getTime","onDelete","widgetId","newWidgets","filter","widget","swapElements","x","y","temp","index","moveUp","indexOf","moveDown","updateWidgetType","type","newType","newWidget","map","curWidget","updateWidgetName","event","console","log","target","value","updateWidgetContent","content","updateHeadingSize","headingSize","render","bind","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualWidget","actualWidgets","returnedWidgets"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,2DAAP;AACA,OAAO,gEAAP;AACA,OAAO,qCAAP;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,sBAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,YANF,EAOEC,cAPF,QAQO,gCARP;AASA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,MAAMC,OAAO,GAAG,IAAID,aAAJ,EAAhB;AACA,MAAME,OAAO,GAAG,SAAhB;AACA,MAAMC,SAAS,GAAG,WAAlB;;AAEA,MAAMC,mBAAN,SAAkCf,KAAK,CAACgB,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAIA,SAAKC,aAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACjD,QAAGF,SAAS,CAACG,OAAV,KAAsB,KAAKR,KAAL,CAAWQ,OAApC,EAA6C;AAC3C,WAAKL,aAAL;AACD;AACF;;AAED,QAAMM,SAAN,GAAkB;AAChB,UAAMC,WAAW,GAAG,MAAM,KAAKV,KAAL,CAAWZ,cAAX,CACtB,KAAKY,KAAL,CAAWQ,OADW,EACF,KAAKP,KAAL,CAAWC,OADT,CAA1B;AAGA,UAAMA,OAAO,GAAGQ,WAAW,CAACR,OAA5B;AACA,SAAKS,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAEQ,WAAW,CAACR;AAAtB,KAAd;AAEAU,IAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,MAAnB,GAA4B,CAAnC;AACD;;AAED,QAAMX,aAAN,GAAsB;AACpB,UAAMD,OAAO,GAAG,MAAMR,OAAO,CAACqB,mBAAR,CAA4B,KAAKf,KAAL,CAAWQ,OAAvC,CAAtB;AACA,SAAKG,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAEA;AAAV,KAAd;AACD;;AAED,QAAMc,SAAN,GAAkB;AAChB,SAAKL,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,EACpB;AAACe,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,UAAU,EAAE,SAAjC;AAA4CC,QAAAA,EAAE,EAAG,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAuB;AAAvE,OADoB;AAAV,KAAd;AAED;;AAEDC,EAAAA,QAAQ,CAACC,QAAD,EAAW;AACjB,QAAIC,UAAU,GAAG,KAAKvB,KAAL,CAAWC,OAAX,CAAmBuB,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACP,EAAP,KAAcI,QAAlD,CAAjB;AACA,UAAMb,WAAW,GAAG,KAAKV,KAAL,CAAWf,YAAX,CAAwBsC,QAAxB,EAAkCC,UAAlC,CAApB;AACA,SAAKb,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAEQ,WAAW,CAACR;AAAtB,KAAd;AACD;;AAEDyB,EAAAA,YAAY,CAACzB,OAAD,EAAU0B,CAAV,EAAaC,CAAb,EAAgB;AAC1B,QAAIC,IAAI,GAAG5B,OAAO,CAAC0B,CAAD,CAAlB;AACA1B,IAAAA,OAAO,CAAC0B,CAAD,CAAP,GAAa1B,OAAO,CAAC2B,CAAD,CAApB;AACA3B,IAAAA,OAAO,CAAC2B,CAAD,CAAP,GAAaC,IAAb;AACA5B,IAAAA,OAAO,CAAC0B,CAAD,CAAP,CAAWG,KAAX,GAAmBH,CAAnB;AACA1B,IAAAA,OAAO,CAAC2B,CAAD,CAAP,CAAWE,KAAX,GAAmBF,CAAnB;AACA,WAAO3B,OAAP;AACD;;AAED,QAAM8B,MAAN,CAAaN,MAAb,EAAqB;AACnB,QAAIK,KAAK,GAAG,KAAK9B,KAAL,CAAWC,OAAX,CAAmB+B,OAAnB,CAA2BP,MAA3B,CAAZ;AACA,SAAKf,QAAL,CACI;AAACT,MAAAA,OAAO,EAAE,KAAKyB,YAAL,CAAkB,KAAK1B,KAAL,CAAWC,OAA7B,EAAsC6B,KAAtC,EAA6CA,KAAK,GAAG,CAArD;AAAV,KADJ;AAEA,SAAK/B,KAAL,CAAWX,YAAX,CAAwBqC,MAAxB,EAAgC,KAAKzB,KAAL,CAAWC,OAA3C;AACD;;AAED,QAAMgC,QAAN,CAAeR,MAAf,EAAuB;AACrB,QAAIK,KAAK,GAAG,KAAK9B,KAAL,CAAWC,OAAX,CAAmB+B,OAAnB,CAA2BP,MAA3B,CAAZ;AACA,SAAKf,QAAL,CACI;AAACT,MAAAA,OAAO,EAAE,KAAKyB,YAAL,CAAkB,KAAK1B,KAAL,CAAWC,OAA7B,EAAsC6B,KAAtC,EAA6CA,KAAK,GAAG,CAArD;AAAV,KADJ;AAEA,SAAK/B,KAAL,CAAWV,cAAX,CAA0BoC,MAA1B,EAAkC,KAAKzB,KAAL,CAAWC,OAA7C;AACD;;AAEDiC,EAAAA,gBAAgB,CAACZ,QAAD,EAAWG,MAAX,EAAmBU,IAAnB,EAAyB;AACvC;AACA;AACA,QAAIC,OAAO,GAAIX,MAAM,CAACR,UAAP,KAAsBvB,OAAvB,GAAkCC,SAAlC,GAA8CD,OAA5D;AACA,QAAI2C,SAAS,GAAG,EAAC,GAAGZ,MAAJ;AAAYR,MAAAA,UAAU,EAAEmB;AAAxB,KAAhB;AACAC,IAAAA,SAAS,CAAC9B,OAAV,GAAoB,KAAKR,KAAL,CAAWQ,OAA/B;AACA,SAAKG,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBqC,GAAnB,CAAuBC,SAAS,IACpDA,SAAS,CAACrB,EAAV,KAAiBI,QAAjB,GAA4Be,SAA5B,GAAwCE,SADpB;AAAV,KAAd;AAEA,SAAKxC,KAAL,CAAWb,YAAX,CAAwBoC,QAAxB,EAAkCG,MAAlC,EAA0C,KAAKzB,KAAL,CAAWC,OAArD;AACD;;AAEDuC,EAAAA,gBAAgB,CAAClB,QAAD,EAAWG,MAAX,EAAmBgB,KAAnB,EAA0B;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,QAAIR,SAAS,GAAG,EAAC,GAAGZ,MAAJ;AAAYT,MAAAA,IAAI,EAAEyB,KAAK,CAACG,MAAN,CAAaC;AAA/B,KAAhB;AAEAR,IAAAA,SAAS,CAAC9B,OAAV,GAAoB,KAAKR,KAAL,CAAWQ,OAA/B;AAEA,SAAKG,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBqC,GAAnB,CAAuBC,SAAS,IAClDA,SAAS,CAACrB,EAAV,KAAiBI,QAAjB,GAA4Be,SAA5B,GAAwCE,SADtB;AAAV,KAAd;AAGA,SAAKxC,KAAL,CAAWb,YAAX,CAAwBoC,QAAxB,EAAkCe,SAAlC,EAA6C,KAAKrC,KAAL,CAAWC,OAAxD;AACD;;AAED6C,EAAAA,mBAAmB,CAACxB,QAAD,EAAWG,MAAX,EAAmBgB,KAAnB,EAA0B;AAC3C,QAAIJ,SAAS,GAAG,EAAC,GAAGZ,MAAJ;AAAYsB,MAAAA,OAAO,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAAlC,KAAhB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACU,OAAtB;AACAV,IAAAA,SAAS,CAAC9B,OAAV,GAAoB,KAAKR,KAAL,CAAWQ,OAA/B;AACA,SAAKG,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBqC,GAAnB,CAAuBC,SAAS,IAClDA,SAAS,CAACrB,EAAV,KAAiBI,QAAjB,GAA4Be,SAA5B,GAAwCE,SADtB;AAAV,KAAd;AAEA,SAAKxC,KAAL,CAAWb,YAAX,CAAwBoC,QAAxB,EAAkCe,SAAlC,EAA6C,KAAKrC,KAAL,CAAWC,OAAxD;AACD;;AAED+C,EAAAA,iBAAiB,CAAC1B,QAAD,EAAWG,MAAX,EAAmBgB,KAAnB,EAA0B;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,QAAIR,SAAS,GAAG,EAAC,GAAGZ,MAAJ;AAAYwB,MAAAA,WAAW,EAAER,KAAK,CAACG,MAAN,CAAaC;AAAtC,KAAhB;AACAR,IAAAA,SAAS,CAAC9B,OAAV,GAAoB,KAAKR,KAAL,CAAWQ,OAA/B;AACA,SAAKG,QAAL,CAAc;AAACT,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBqC,GAAnB,CAAuBC,SAAS,IAClDA,SAAS,CAACrB,EAAV,KAAiBI,QAAjB,GAA4Be,SAA5B,GAAwCE,SADtB;AAAV,KAAd;AAGA,SAAKxC,KAAL,CAAWb,YAAX,CAAwBoC,QAAxB,EAAkCG,MAAlC,EAA0C,KAAKzB,KAAL,CAAWC,OAArD;AACD;;AAEDiD,EAAAA,MAAM,GAAG;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,uBAAD;AACI,MAAA,OAAO,EAAE,KAAK1C,SAAL,CAAe2C,IAAf,CAAoB,IAApB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnD,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,CAAmBqC,GAAnB,CAAuB,CAACb,MAAD,EAASK,KAAT,KAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,uBAAD;AACI,MAAA,GAAG,EAAEL,MAAM,CAACP,EADhB;AAEI,MAAA,cAAc,EAAE,KAAKN,cAAL,CAAoBuC,IAApB,CAAyB,IAAzB,CAFpB;AAII,MAAA,UAAU,EAAE1B,MAAM,CAACR,UAAP,KAAsB,EAAtB,GACRvB,OADQ,GACE+B,MAAM,CAACR,UALzB;AAMI,MAAA,IAAI,EAAEQ,MAAM,CAACT,IANjB;AAOI,MAAA,OAAO,EAAES,MAAM,CAACsB,OAPpB;AAQI,MAAA,WAAW,EAAEtB,MAAM,CAACwB,WARxB;AAUI,MAAA,KAAK,EAAEnB,KAVX;AAWI,MAAA,MAAM,EAAEL,MAXZ;AAYI,MAAA,MAAM,EAAE,KAAKM,MAAL,CAAYoB,IAAZ,CAAiB,IAAjB,EAAuB1B,MAAvB,CAZZ;AAaI,MAAA,QAAQ,EAAE,KAAKQ,QAAL,CAAckB,IAAd,CAAmB,IAAnB,EAAyB1B,MAAzB,CAbd;AAcI,MAAA,QAAQ,EAAE,KAAKJ,QAAL,CAAc8B,IAAd,CAAmB,IAAnB,EAAyB1B,MAAM,CAACP,EAAhC,CAdd;AAeI,MAAA,gBAAgB,EAAE,KAAKgB,gBAAL,CAAsBiB,IAAtB,CAA2B,IAA3B,EAAiC1B,MAAM,CAACP,EAAxC,EAA4CO,MAA5C,CAftB;AAgBI,MAAA,gBAAgB,EAAE,KAAKe,gBAAL,CAAsBW,IAAtB,CAA2B,IAA3B,EAAiC1B,MAAM,CAACP,EAAxC,EAA4CO,MAA5C,CAhBtB;AAiBI,MAAA,mBAAmB,EAAE,KAAKqB,mBAAL,CAAyBK,IAAzB,CAA8B,IAA9B,EAAoC1B,MAAM,CAACP,EAA3C,EAA+CO,MAA/C,CAjBzB;AAkBI,MAAA,iBAAiB,EAAE,KAAKuB,iBAAL,CAAuBG,IAAvB,CAA4B,IAA5B,EAAkC1B,MAAM,CAACP,EAAzC,EAA6CO,MAA7C,CAlBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADmB,CADzB,EAyBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAKV,SAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,CAHA,CADJ;AAmCD;;AApJ+C;;AAuJlD,MAAMqC,qBAAqB,GAAIpD,KAAD,IAAW;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcA;AADlB,GAAP;AAGD,CAJD;;AAMA,MAAMoD,wBAAwB,GAAIC,QAAD,IAAc;AAC7C,SAAO;AACLvE,IAAAA,YAAY,EAAGwB,OAAD,IACVd,OAAO,CAACV,YAAR,CAAqBwB,OAArB,EACI;AAACS,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,UAAU,EAAE;AAAjC,KADJ,EAECsC,IAFD,CAEMC,YAAY,IACdF,QAAQ,CAACvE,YAAY,CAACyE,YAAD,EAAejD,OAAf,CAAb,CAHZ,CAFC;AAOLtB,IAAAA,sBAAsB,EAAGsB,OAAD,IACpBd,OAAO,CAACqB,mBAAR,CAA4BP,OAA5B,EACCgD,IADD,CACME,aAAa,IACfH,QAAQ,CAACrE,sBAAsB,CAACwE,aAAD,CAAvB,CAFZ,CARC;AAYLvE,IAAAA,YAAY,EAAE,CAACoC,QAAD,EAAWG,MAAX,EAAmBxB,OAAnB,KACVqD,QAAQ,CAACpE,YAAY,CAACoC,QAAD,EAAWG,MAAX,EAAmBxB,OAAnB,CAAb,CAbP;AAcL;AACA;AACA;AACA;AAEAjB,IAAAA,YAAY,EAAE,CAACsC,QAAD,EAAWrB,OAAX,KACVqD,QAAQ,CAACtE,YAAY,CAACsC,QAAD,EAAWrB,OAAX,CAAb,CApBP;AAsBLd,IAAAA,cAAc,EAAE,CAACoB,OAAD,EAAUN,OAAV,KACZR,OAAO,CAACN,cAAR,CAAuBoB,OAAvB,EAAgCN,OAAhC,EACCsD,IADD,CACMG,eAAe,IACjBJ,QAAQ,CAACnE,cAAc,CAACuE,eAAD,CAAf,CAFZ,CAvBC;AA2BLtE,IAAAA,YAAY,EAAGqC,MAAD,IACV6B,QAAQ,CAAClE,YAAY,CAACqC,MAAD,CAAb,CA5BP;AA8BLpC,IAAAA,cAAc,EAAGoC,MAAD,IACZ6B,QAAQ,CAACjE,cAAc,CAACoC,MAAD,CAAf;AA/BP,GAAP;AAiCD,CAlCD;;AAoCA,eAAe3C,OAAO,CAClBsE,qBADkB,EAElBC,wBAFkB,CAAP,CAGdzD,mBAHc,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport {\n  createWidget,\n  deleteWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  saveAllWidgets,\n  moveWidgetUp,\n  moveWidgetDown\n} from '../../../actions/widgetActions'\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService'\n\nconst service = new WidgetService();\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      widgets: [],\n    };\n\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    const widgetState = await this.props.saveAllWidgets(\n        this.props.topicId, this.state.widgets);\n\n    const widgets = widgetState.widgets;\n    this.setState({widgets: widgetState.widgets});\n\n    alert('Your widgets have been saved!');\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({widgets: widgets});\n  }\n\n  async addWidget() {\n    this.setState({widgets: [...this.state.widgets,\n        {name: 'New widget', widgetType: 'Heading', id: (new Date()).getTime()+\"\"}]})\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    const widgetState = this.props.deleteWidget(widgetId, newWidgets);\n    this.setState({widgets: widgetState.widgets});\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n        {widgets: this.swapElements(this.state.widgets, index, index - 1)});\n    this.props.moveWidgetUp(widget, this.state.widgets);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n        {widgets: this.swapElements(this.state.widgets, index, index + 1)});\n    this.props.moveWidgetDown(widget, this.state.widgets);\n  }\n\n  updateWidgetType(widgetId, widget, type) {\n    // let type = event.target.value;\n    // if (type === this.state.type) return;\n    let newType = (widget.widgetType === HEADING) ? PARAGRAPH : HEADING;\n    let newWidget = {...widget, widgetType: newType};\n    newWidget.topicId = this.props.topicId;\n    this.setState({widgets: this.state.widgets.map(curWidget =>\n        curWidget.id === widgetId ? newWidget : curWidget)});\n    this.props.updateWidget(widgetId, widget, this.state.widgets);\n  }\n\n  updateWidgetName(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = {...widget, name: event.target.value};\n\n    newWidget.topicId = this.props.topicId;\n\n    this.setState({widgets: this.state.widgets.map(curWidget =>\n          curWidget.id === widgetId ? newWidget : curWidget)});\n\n    this.props.updateWidget(widgetId, newWidget, this.state.widgets);\n  }\n\n  updateWidgetContent(widgetId, widget, event) {\n    let newWidget = {...widget, content: event.target.value};\n    console.log(newWidget.content);\n    newWidget.topicId = this.props.topicId;\n    this.setState({widgets: this.state.widgets.map(curWidget =>\n          curWidget.id === widgetId ? newWidget : curWidget)});\n    this.props.updateWidget(widgetId, newWidget, this.state.widgets);\n  }\n\n  updateHeadingSize(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = {...widget, headingSize: event.target.value};\n    newWidget.topicId = this.props.topicId;\n    this.setState({widgets: this.state.widgets.map(curWidget =>\n          curWidget.id === widgetId ? newWidget : curWidget)});\n\n    this.props.updateWidget(widgetId, widget, this.state.widgets);\n  }\n\n  render() {\n    return (\n        <span>\n        <SaveAndPreviewComponent\n            saveAll={this.onSaveAll.bind(this)}/>\n        <div>\n          {this.state.widgets && this.state.widgets.map((widget, index) =>\n              <div>\n                <WidgetListItemComponent\n                    key={widget.id}\n                    getLastElement={this.getLastElement.bind(this)}\n\n                    widgetType={widget.widgetType === '' ?\n                        HEADING : widget.widgetType}\n                    name={widget.name}\n                    content={widget.content}\n                    headingSize={widget.headingSize}\n\n                    index={index}\n                    widget={widget}\n                    moveUp={this.moveUp.bind(this, widget)}\n                    moveDown={this.moveDown.bind(this, widget)}\n                    onDelete={this.onDelete.bind(this, widget.id)}\n                    updateWidgetType={this.updateWidgetType.bind(this, widget.id, widget)}\n                    updateWidgetName={this.updateWidgetName.bind(this, widget.id, widget)}\n                    updateWidgetContent={this.updateWidgetContent.bind(this, widget.id, widget)}\n                    updateHeadingSize={this.updateHeadingSize.bind(this, widget.id, widget)}\n                />\n              </div>)\n          }\n          <div className=\"nav-item\" onClick={() => this.addWidget()}>\n            <i className=\"nav-link fa fa-plus-circle fa-2x\"/>\n          </div>\n        </div>\n      </span>\n    )\n  }\n}\n\nconst stateToPropertyMapper = (state) => {\n  return {\n    widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    createWidget: (topicId) =>\n        service.createWidget(topicId,\n            {name: 'New widget', widgetType: 'Heading'})\n        .then(actualWidget =>\n            dispatch(createWidget(actualWidget, topicId))),\n\n    findAllWidgetsForTopic: (topicId) =>\n        service.findWidgetsForTopic(topicId)\n        .then(actualWidgets =>\n            dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n    updateWidget: (widgetId, widget, widgets) =>\n        dispatch(updateWidget(widgetId, widget, widgets)),\n    // updateWidget: (widgetId, widget) =>\n    //     service.updateWidget(widgetId, widget)\n    //     .then(updatedWidget =>\n    //         dispatch(updateWidget(updatedWidget))),\n\n    deleteWidget: (widgetId, widgets) =>\n        dispatch(deleteWidget(widgetId, widgets)),\n\n    saveAllWidgets: (topicId, widgets) =>\n        service.saveAllWidgets(topicId, widgets)\n        .then(returnedWidgets =>\n            dispatch(saveAllWidgets(returnedWidgets))),\n\n    moveWidgetUp: (widget) =>\n        dispatch(moveWidgetUp(widget)),\n\n    moveWidgetDown: (widget) =>\n        dispatch(moveWidgetDown(widget))\n  }\n};\n\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper)\n(WidgetListComponent)"]},"metadata":{},"sourceType":"module"}