{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListItem.js\";\nimport React from 'react';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport ModuleService from '../../../services/ModuleService';\nconst service = new ModuleService();\n\nclass ModuleListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      title: null\n    };\n    this.setState({\n      isEditing: false,\n      title: props.module.title\n    });\n  } // componentDidMount() {\n  //   this.getLatestModule(this.props.moduleId);\n  // }\n  // async getLatestModule(moduleId) {\n  //   const module = await service.getModule(moduleId);\n  //   this.setState({module: module});\n  // }\n  // onSelect() {\n  //   this.props.setSelectedModule(this.props.moduleId);\n  //   // this.setState({isActive: true});\n  //   // this.props.resetOtherModules(this.props.moduleId);\n  // }\n\n\n  onEdit() {\n    this.setState({\n      isEditing: true\n    });\n    this.props.onSelect(); // this.setState({isEditing: true});\n    // this.props.resetOtherModules(this.props.moduleId);\n  }\n\n  onChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  } // onDelete() {\n  //   this.props.deleteModule(this.state.module._id);\n  // }\n\n\n  onSave() {\n    this.props.onSave(this.state.title);\n  } // I need:\n\n  /*\n  {\n    isSelected: boolean\n    module: object\n    onSelect: closure that selects current module\n    onDelete: closure that deletes current module\n    onSave: closure that updates current module and refreshes everything\n  }\n  */\n\n\n  render() {\n    return React.createElement(\"li\", {\n      className: `list-group-item wbdv-module-item wbdv-module-item-title\n        ${this.props.isSelected ? 'active' : ''}`,\n      onClick: () => this.props.onSelect(),\n      key: module._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, !this.state.isEditing && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-2x\",\n      onClick: () => this.props.onDelete(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-pencil fa-2x\",\n      onClick: () => this.onEdit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), this.state.isEditing && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"typing-container\",\n      value: this.state.title,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-check fa-2x\",\n      onClick: () => this.onSave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ModuleListItem;","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListItem.js"],"names":["React","ModuleService","service","ModuleListItem","Component","constructor","props","state","isEditing","title","setState","module","onEdit","onSelect","onChange","event","target","value","onSave","render","isSelected","_id","onDelete","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport ModuleService from '../../../services/ModuleService';\n\nconst service = new ModuleService();\n\nclass ModuleListItem extends React.Component {\n\n  state = {\n    isEditing: false,\n    title: null,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.setState({\n      isEditing: false,\n      title: props.module.title,\n    });\n  }\n\n  // componentDidMount() {\n  //   this.getLatestModule(this.props.moduleId);\n  // }\n\n  // async getLatestModule(moduleId) {\n  //   const module = await service.getModule(moduleId);\n  //   this.setState({module: module});\n  // }\n\n  // onSelect() {\n  //   this.props.setSelectedModule(this.props.moduleId);\n  //   // this.setState({isActive: true});\n  //   // this.props.resetOtherModules(this.props.moduleId);\n  // }\n\n  onEdit() {\n    this.setState({isEditing: true});\n    this.props.onSelect();\n    // this.setState({isEditing: true});\n    // this.props.resetOtherModules(this.props.moduleId);\n  }\n\n  onChange(event) {\n    this.setState({title: event.target.value});\n  }\n\n  // onDelete() {\n  //   this.props.deleteModule(this.state.module._id);\n  // }\n\n  onSave() {\n    this.props.onSave(this.state.title);\n  }\n\n  // I need:\n  /*\n  {\n    isSelected: boolean\n    module: object\n    onSelect: closure that selects current module\n    onDelete: closure that deletes current module\n    onSave: closure that updates current module and refreshes everything\n  }\n  */\n\n  render() {\n    return (\n      <li className={`list-group-item wbdv-module-item wbdv-module-item-title\n        ${this.props.isSelected ? 'active' : ''}`}\n        onClick={() => this.props.onSelect()} key={module._id}>\n        \n        {!this.state.isEditing &&\n          <div>\n            <span>{this.state.title}</span>\n            <span className=\"float-right\">\n              <i className=\"fa fa-trash fa-2x\"\n                onClick={() => this.props.onDelete()}/>\n              <i className=\"fa fa-pencil fa-2x\"\n                onClick={() => this.onEdit()}/>\n            </span>\n          </div>\n        }\n        {this.state.isEditing &&\n          <div>\n            <input type=\"text\" className=\"typing-container\"\n            value={this.state.title}\n            onChange={(e) => this.onChange(e)} />\n            \n            <span className=\"float-right\">\n              <i className=\"fa fa-check fa-2x\"\n                onClick={() => this.onSave()}/>\n            </span>\n          </div>\n        }\n      </li>\n    );\n  }\n}\n\nexport default ModuleListItem;\n"]},"metadata":{},"sourceType":"module"}