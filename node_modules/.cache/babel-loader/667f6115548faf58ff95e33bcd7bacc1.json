{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget, saveAllWidgets, moveWidgetUp, moveWidgetDown } from '../../../actions/widgetActions';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nimport WidgetBarComponent from \"./WidgetBarComponent\";\nconst service = new WidgetService();\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\nconst DEFAULT_SIZE = 1;\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: []\n    };\n    this.updateWidgets();\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    let newWidget = headingWidget(new Date().getTime(), this.state.widgets.length);\n    this.setState({\n      widgets: [...this.state.widgets, newWidget]\n    }); // this.props.createWidget(this.props.topicId);\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    this.setState({\n      widgets: newWidgets\n    }); // this.props.deleteWidget(widgetId);\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].widgetOrder = x;\n    widgets[y].widgetOrder = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index - 1)\n    }); // this.props.moveWidgetUp(widget, this.state.widgets[index - 1]);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index + 1)\n    }); // this.props.moveWidgetDown(widget, this.state.widgets[index + 1]);\n  }\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget => widget.id === newWidget.id ? newWidget : widget)\n    });\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(SaveAndPreviewComponent, {\n      saveAll: this.onSaveAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.widgets && this.state.widgets.map((widget, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col container fluid wbdv-widget info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(WidgetBarComponent, {\n      type: !widget.widgetType ? HEADING : widget.widgetType,\n      widget: widget,\n      widgetOrder: index,\n      getLastElement: this.getLastElement.bind(this),\n      moveUp: this.moveUp.bind(this, widget),\n      moveDown: this.moveDown.bind(this, widget),\n      updateWidget: this.updateWidget.bind(this),\n      onDelete: this.onDelete.bind(this, widget.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), (!widget.widgetType || widget.widgetType === HEADING) && React.createElement(HeadingWidgetComponent, {\n      key: widget.id,\n      widget: widget,\n      size: widget.size ? widget.size : DEFAULT_SIZE,\n      name: widget.name ? '' : widget.name,\n      text: widget.text ? '' : widget.text,\n      updateWidget: this.updateWidget.bind(this, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), widget.widgetType === PARAGRAPH && React.createElement(ParagraphWidgetComponent, {\n      key: widget.id,\n      widget: widget,\n      name: widget.name ? '' : widget.name,\n      text: widget.text ? '' : widget.text,\n      updateWidget: this.updateWidget.bind(this, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), widget.widgetType === LIST && React.createElement(ListWidgetComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"nav-item\",\n      onClick: () => this.addWidget(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"nav-link fa fa-plus-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => dispatch(createWidget(topicId)),\n    findAllWidgetsForTopic: topicId => service.findWidgetsForTopic(topicId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: widget => dispatch(updateWidget(widget)),\n    deleteWidget: widgetId => dispatch(deleteWidget(widgetId)),\n    saveAllWidgets: (topicId, widgets) => service.saveAllWidgets(topicId, widgets).then(returnedWidgets => dispatch(saveAllWidgets(returnedWidgets))),\n    moveWidgetUp: (widget, other) => dispatch(moveWidgetUp(widget, other)),\n    moveWidgetDown: (widget, other) => dispatch(moveWidgetDown(widget, other))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","saveAllWidgets","moveWidgetUp","moveWidgetDown","HeadingWidgetComponent","ParagraphWidgetComponent","SaveAndPreviewComponent","WidgetService","WidgetBarComponent","service","HEADING","PARAGRAPH","IMAGE","LIST","DEFAULT_SIZE","WidgetListComponent","Component","constructor","props","state","widgets","updateWidgets","getLastElement","length","componentDidUpdate","prevProps","topicId","onSaveAll","findWidgetsForTopic","setState","addWidget","newWidget","headingWidget","Date","getTime","onDelete","widgetId","newWidgets","filter","widget","id","swapElements","x","y","temp","widgetOrder","moveUp","index","indexOf","moveDown","map","render","bind","widgetType","size","name","text","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualWidgets","returnedWidgets","other"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport {\n  createWidget,\n  deleteWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  saveAllWidgets,\n  moveWidgetUp,\n  moveWidgetDown\n} from '../../../actions/widgetActions';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nimport WidgetBarComponent from \"./WidgetBarComponent\";\n\nconst service = new WidgetService();\n\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\nconst DEFAULT_SIZE = 1;\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      widgets: [],\n    };\n\n    this.updateWidgets();\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n  }\n\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({ widgets: widgets });\n  }\n\n  async addWidget() {\n    let newWidget = headingWidget((new Date()).getTime(), this.state.widgets.length);\n    this.setState({widgets: [...this.state.widgets, newWidget]});\n    // this.props.createWidget(this.props.topicId);\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    this.setState({ widgets: newWidgets });\n    // this.props.deleteWidget(widgetId);\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].widgetOrder = x;\n    widgets[y].widgetOrder = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index - 1) });\n    // this.props.moveWidgetUp(widget, this.state.widgets[index - 1]);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index + 1) });\n    // this.props.moveWidgetDown(widget, this.state.widgets[index + 1]);\n  }\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget =>\n        widget.id === newWidget.id ? newWidget : widget)\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        <SaveAndPreviewComponent\n          saveAll={this.onSaveAll.bind(this)} />\n        <div>\n          {this.state.widgets && this.state.widgets.map((widget, index) =>\n            <div>\n              <div className={\"col container fluid wbdv-widget info\"}>\n                <WidgetBarComponent\n                  type={!widget.widgetType ? HEADING : widget.widgetType}\n                  widget={widget}\n                  widgetOrder={index}\n                  getLastElement={this.getLastElement.bind(this)}\n                  moveUp={this.moveUp.bind(this, widget)}\n                  moveDown={this.moveDown.bind(this, widget)}\n                  updateWidget={this.updateWidget.bind(this)}\n                  onDelete={this.onDelete.bind(this, widget.id)} />\n\n                {(!widget.widgetType || widget.widgetType === HEADING) &&\n                  <HeadingWidgetComponent\n                    key={widget.id}\n                    widget={widget}\n                    size={widget.size ? widget.size : DEFAULT_SIZE}\n                    name={widget.name ? '' : widget.name}\n                    text={widget.text ? '' : widget.text}\n                    updateWidget={this.updateWidget.bind(this, widget)}/>}\n\n                {widget.widgetType === PARAGRAPH &&\n                  <ParagraphWidgetComponent\n                    key={widget.id}\n                    widget={widget}\n                    name={widget.name ? '' : widget.name}\n                    text={widget.text ? '' : widget.text}\n                    updateWidget={this.updateWidget.bind(this, widget)}/>}\n                \n                {widget.widgetType === LIST &&\n                  <ListWidgetComponent/>}\n              </div>\n            </div>\n          )\n          }\n          <div className=\"nav-item\" onClick={() => this.addWidget()}>\n            <i className=\"nav-link fa fa-plus-circle fa-2x\" />\n          </div>\n        </div>\n      </span>\n    )\n  }\n}\n\nconst stateToPropertyMapper = (state) => {\n  return {\n    widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    createWidget: (topicId) =>\n      dispatch(createWidget(topicId)),\n\n    findAllWidgetsForTopic: (topicId) =>\n      service.findWidgetsForTopic(topicId)\n        .then(actualWidgets =>\n          dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n    updateWidget: (widget) =>\n      dispatch(updateWidget(widget)),\n\n    deleteWidget: (widgetId) =>\n      dispatch(deleteWidget(widgetId)),\n\n    saveAllWidgets: (topicId, widgets) =>\n      service.saveAllWidgets(topicId, widgets)\n        .then(returnedWidgets =>\n          dispatch(saveAllWidgets(returnedWidgets))),\n\n    moveWidgetUp: (widget, other) =>\n      dispatch(moveWidgetUp(widget, other)),\n\n    moveWidgetDown: (widget, other) =>\n      dispatch(moveWidgetDown(widget, other))\n  }\n};\n\nexport default connect(\n  stateToPropertyMapper,\n  dispatchToPropertyMapper)\n  (WidgetListComponent)"]},"metadata":{},"sourceType":"module"}