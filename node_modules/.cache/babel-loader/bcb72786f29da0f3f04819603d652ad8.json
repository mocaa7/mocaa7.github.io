{"ast":null,"code":"import { CREATE_WIDGET, DELETE_WIDGET, UPDATE_WIDGET, FIND_ALL_WIDGETS_FOR_TOPIC, MOVE_WIDGET_UP } from '../actions/widgetActions';\n\nconst widgetReducer = (state = {\n  widgets: []\n}, action) => {\n  switch (action.type) {\n    case FIND_ALL_WIDGETS_FOR_TOPIC:\n      return {\n        widgets: action.widgets\n      };\n\n    case CREATE_WIDGET:\n      return {\n        widgets: [...state.widgets, action.newWidget]\n      };\n\n    case DELETE_WIDGET:\n      return {\n        widgets: state.widgets.filter(widget => widget._id !== action.widgetId)\n      };\n\n    case UPDATE_WIDGET:\n      return {\n        widgets: state.widgets.map(widget => widget._id === action.widgetId ? action.widget : widget)\n      };\n\n    case MOVE_WIDGET_UP:\n      var index = state.widgets.indexOf(action.widget);\n      return {\n        widgets: widgets.swap(index, index - 1)\n      };\n\n    case MOVE_WIDGET_UP:\n      var index = state.widgets.indexOf(action.widget);\n      state.widgets.swap(index, index + 1);\n      return {\n        widgets: widgets.swap(index, index + 1)\n      };\n\n    default:\n      return state;\n  }\n};\n\nArray.prototype.swap = function (x, y) {\n  var b = this[x];\n  this[x] = this[y];\n  this[y] = b;\n  return this;\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/reducers/widgetReducer.js"],"names":["CREATE_WIDGET","DELETE_WIDGET","UPDATE_WIDGET","FIND_ALL_WIDGETS_FOR_TOPIC","MOVE_WIDGET_UP","widgetReducer","state","widgets","action","type","newWidget","filter","widget","_id","widgetId","map","index","indexOf","swap","Array","prototype","x","y","b"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,0BAJJ,EAKIC,cALJ,QAMO,0BANP;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,OAAO,EAAE;AAAV,CAAT,EAAwBC,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,0BAAL;AACE,aAAO;AAACI,QAAAA,OAAO,EAAEC,MAAM,CAACD;AAAjB,OAAP;;AACF,SAAKP,aAAL;AACE,aAAO;AAACO,QAAAA,OAAO,EAAE,CAAC,GAAGD,KAAK,CAACC,OAAV,EAAmBC,MAAM,CAACE,SAA1B;AAAV,OAAP;;AACF,SAAKT,aAAL;AACE,aAAO;AAACM,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAArD;AAAV,OAAP;;AACF,SAAKZ,aAAL;AACE,aAAO;AAACK,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcQ,GAAd,CAAkBH,MAAM,IACvCA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAAtB,GAAiCN,MAAM,CAACI,MAAxC,GAAiDA,MADlC;AAAV,OAAP;;AAEF,SAAKR,cAAL;AACE,UAAIY,KAAK,GAAGV,KAAK,CAACC,OAAN,CAAcU,OAAd,CAAsBT,MAAM,CAACI,MAA7B,CAAZ;AACA,aAAO;AAACL,QAAAA,OAAO,EAAEA,OAAO,CAACW,IAAR,CAAaF,KAAb,EAAoBA,KAAK,GAAG,CAA5B;AAAV,OAAP;;AACF,SAAKZ,cAAL;AACE,UAAIY,KAAK,GAAGV,KAAK,CAACC,OAAN,CAAcU,OAAd,CAAsBT,MAAM,CAACI,MAA7B,CAAZ;AACAN,MAAAA,KAAK,CAACC,OAAN,CAAcW,IAAd,CAAmBF,KAAnB,EAA0BA,KAAK,GAAG,CAAlC;AACA,aAAO;AAACT,QAAAA,OAAO,EAAEA,OAAO,CAACW,IAAR,CAAaF,KAAb,EAAoBA,KAAK,GAAG,CAA5B;AAAV,OAAP;;AACF;AACE,aAAOV,KAAP;AAlBN;AAoBH,CArBD;;AAuBAa,KAAK,CAACC,SAAN,CAAgBF,IAAhB,GAAuB,UAAUG,CAAV,EAAaC,CAAb,EAAgB;AACrC,MAAIC,CAAC,GAAG,KAAKF,CAAL,CAAR;AACA,OAAKA,CAAL,IAAU,KAAKC,CAAL,CAAV;AACA,OAAKA,CAAL,IAAUC,CAAV;AACA,SAAO,IAAP;AACD,CALD;;AAOA,eAAelB,aAAf","sourcesContent":["import {\n    CREATE_WIDGET,\n    DELETE_WIDGET,\n    UPDATE_WIDGET,\n    FIND_ALL_WIDGETS_FOR_TOPIC,\n    MOVE_WIDGET_UP\n} from '../actions/widgetActions';\n\nconst widgetReducer = (state = {widgets: []}, action) => {\n    switch(action.type) {\n        case FIND_ALL_WIDGETS_FOR_TOPIC:\n          return {widgets: action.widgets};\n        case CREATE_WIDGET:\n          return {widgets: [...state.widgets, action.newWidget]};\n        case DELETE_WIDGET:\n          return {widgets: state.widgets.filter(widget => widget._id !== action.widgetId)};\n        case UPDATE_WIDGET:\n          return {widgets: state.widgets.map(widget =>\n            widget._id === action.widgetId ? action.widget : widget)};\n        case MOVE_WIDGET_UP:\n          var index = state.widgets.indexOf(action.widget);\n          return {widgets: widgets.swap(index, index - 1)};\n        case MOVE_WIDGET_UP:\n          var index = state.widgets.indexOf(action.widget);\n          state.widgets.swap(index, index + 1);\n          return {widgets: widgets.swap(index, index + 1)};\n        default:\n          return state\n      }\n};\n\nArray.prototype.swap = function (x, y) {\n  var b = this[x];\n  this[x] = this[y];\n  this[y] = b;\n  return this;\n}\n\nexport default widgetReducer;"]},"metadata":{},"sourceType":"module"}