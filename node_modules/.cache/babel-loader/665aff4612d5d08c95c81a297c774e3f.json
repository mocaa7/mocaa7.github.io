{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget, saveAllWidgets, moveWidgetUp, moveWidgetDown } from '../../../actions/widgetActions';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nconst service = new WidgetService();\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\nconst DEFAULT_HEADING_SIZE = 'Heading 1';\nconst DEFAULT_HEADING_TEXT = 'Heading text';\nconst DEFAULT_PARAGRAPH_TEXT = 'Paragraph text';\nconst DEFAULT_LIST_TYPE = false;\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: []\n    };\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n    this.updateWidgets();\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    // this.props.createWidget(this.props.topicId);\n    this.setState({\n      widgets: [...this.state.widgets, {\n        name: '',\n        widgetType: 'Heading',\n        id: new Date().getTime() + \"\"\n      }]\n    });\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId); // const widgetState = this.props.deleteWidget(widgetId);\n\n    this.setState({\n      widgets: newWidgets\n    });\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index - 1)\n    });\n    this.props.moveWidgetUp(widget, this.state.widgets);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index + 1)\n    });\n    this.props.moveWidgetDown(widget, this.state.widgets);\n  }\n\n  updateWidgetType(widgetId, widget, type) {\n    // let type = event.target.value;\n    // if (type === this.state.type) return;\n    let newType = widget.widgetType === HEADING ? PARAGRAPH : HEADING;\n    let newWidget = { ...widget,\n      widgetType: newType\n    };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widget);\n  }\n\n  updateWidgetName(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = { ...widget,\n      name: event.target.value\n    };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetContent(widgetId, widget, event) {\n    let newWidget = { ...widget,\n      content: event.target.value\n    };\n    console.log(newWidget.content);\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(newWidget);\n  }\n\n  updateHeadingSize(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = { ...widget,\n      headingSize: event.target.value\n    };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget => curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widget);\n  }\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget => widget.id === newWidget.id ? newWidget : widget)\n    });\n  } // addFields(widget, index, ) {\n  //   widget.topicId = this.props.topicId;\n  //   widget.widgetOrder = index;\n  // }\n\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(SaveAndPreviewComponent, {\n      saveAll: this.onSaveAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.widgets && this.state.widgets.map((widget, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col container fluid wbdv-widget info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(WidgetListItemComponent, {\n      key: widget.id,\n      getLastElement: this.getLastElement.bind(this),\n      widgetType: widget.widgetType === '' ? HEADING : widget.widgetType,\n      widgetOrder: index,\n      widget: widget,\n      moveUp: this.moveUp.bind(this, widget),\n      moveDown: this.moveDown.bind(this, widget),\n      onDelete: this.onDelete.bind(this, widget.id),\n      updateWidgetType: this.updateWidgetType.bind(this, widget.id, widget),\n      updateWidgetName: this.updateWidgetName.bind(this, widget.id, widget),\n      updateWidgetContent: this.updateWidgetContent.bind(this, widget.id, widget),\n      updateHeadingSize: this.updateHeadingSize.bind(this, widget.id, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"nav-item\",\n      onClick: () => this.addWidget(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"nav-link fa fa-plus-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => dispatch(createWidget(topicId)),\n    findAllWidgetsForTopic: topicId => service.findWidgetsForTopic(topicId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: (widgetId, widget, widgets) => dispatch(updateWidget(widgetId, widget, widgets)),\n    // updateWidget: (widgetId, widget) =>\n    //     service.updateWidget(widgetId, widget)\n    //     .then(updatedWidget =>\n    //         dispatch(updateWidget(updatedWidget))),\n    deleteWidget: widgetId => dispatch(deleteWidget(widgetId)),\n    saveAllWidgets: (topicId, widgets) => service.saveAllWidgets(topicId, widgets).then(returnedWidgets => dispatch(saveAllWidgets(returnedWidgets))),\n    moveWidgetUp: widget => dispatch(moveWidgetUp(widget)),\n    moveWidgetDown: widget => dispatch(moveWidgetDown(widget))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","saveAllWidgets","moveWidgetUp","moveWidgetDown","HeadingWidgetComponent","ParagraphWidgetComponent","WidgetListItemComponent","SaveAndPreviewComponent","WidgetService","service","HEADING","PARAGRAPH","IMAGE","LIST","DEFAULT_HEADING_SIZE","DEFAULT_HEADING_TEXT","DEFAULT_PARAGRAPH_TEXT","DEFAULT_LIST_TYPE","WidgetListComponent","Component","constructor","props","state","widgets","updateWidgets","componentDidUpdate","prevProps","prevState","snapshot","topicId","onSaveAll","getLastElement","length","findWidgetsForTopic","setState","addWidget","name","widgetType","id","Date","getTime","onDelete","widgetId","newWidgets","filter","widget","swapElements","x","y","temp","index","moveUp","indexOf","moveDown","updateWidgetType","type","newType","newWidget","map","curWidget","updateWidgetName","event","console","log","target","value","updateWidgetContent","content","updateHeadingSize","headingSize","render","bind","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualWidgets","returnedWidgets"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport {\n  createWidget,\n  deleteWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  saveAllWidgets,\n  moveWidgetUp,\n  moveWidgetDown\n} from '../../../actions/widgetActions';\n\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\n\nconst service = new WidgetService();\n\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\n\nconst DEFAULT_HEADING_SIZE = 'Heading 1';\nconst DEFAULT_HEADING_TEXT = 'Heading text';\nconst DEFAULT_PARAGRAPH_TEXT = 'Paragraph text';\nconst DEFAULT_LIST_TYPE = false;\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      widgets: [],\n    };\n\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n    this.updateWidgets();\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({ widgets: widgets });\n  }\n\n  async addWidget() {\n    // this.props.createWidget(this.props.topicId);\n    this.setState({\n      widgets: [...this.state.widgets,\n      { name: '', widgetType: 'Heading', id: (new Date()).getTime() + \"\" }]\n    })\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    // const widgetState = this.props.deleteWidget(widgetId);\n    this.setState({ widgets: newWidgets });\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index - 1) });\n    this.props.moveWidgetUp(widget, this.state.widgets);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index + 1) });\n    this.props.moveWidgetDown(widget, this.state.widgets);\n  }\n\n  updateWidgetType(widgetId, widget, type) {\n    // let type = event.target.value;\n    // if (type === this.state.type) return;\n    let newType = (widget.widgetType === HEADING) ? PARAGRAPH : HEADING;\n    let newWidget = { ...widget, widgetType: newType };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget =>\n        curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(widget);\n  }\n\n  updateWidgetName(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = { ...widget, name: event.target.value };\n\n    newWidget.topicId = this.props.topicId;\n\n    this.setState({\n      widgets: this.state.widgets.map(curWidget =>\n        curWidget.id === widgetId ? newWidget : curWidget)\n    });\n\n    this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetContent(widgetId, widget, event) {\n    let newWidget = { ...widget, content: event.target.value };\n    console.log(newWidget.content);\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget =>\n        curWidget.id === widgetId ? newWidget : curWidget)\n    });\n    this.props.updateWidget(newWidget);\n  }\n\n  updateHeadingSize(widgetId, widget, event) {\n    console.log(event.target.value);\n    let newWidget = { ...widget, headingSize: event.target.value };\n    newWidget.topicId = this.props.topicId;\n    this.setState({\n      widgets: this.state.widgets.map(curWidget =>\n        curWidget.id === widgetId ? newWidget : curWidget)\n    });\n\n    this.props.updateWidget(widget);\n  }\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget =>\n        widget.id === newWidget.id ? newWidget : widget)\n    });\n  }\n\n  // addFields(widget, index, ) {\n  //   widget.topicId = this.props.topicId;\n  //   widget.widgetOrder = index;\n  // }\n\n  render() {\n    return (\n      <span>\n        <SaveAndPreviewComponent\n          saveAll={this.onSaveAll.bind(this)}/>\n        <div>\n          {this.state.widgets && this.state.widgets.map((widget, index) =>\n            <div>\n              <div className={\"col container fluid wbdv-widget info\"}>\n                <WidgetListItemComponent\n                  key={widget.id}\n                  getLastElement={this.getLastElement.bind(this)}\n                  widgetType={widget.widgetType === '' ?\n                    HEADING : widget.widgetType}\n                  widgetOrder={index}\n                  widget={widget}\n\n                  moveUp={this.moveUp.bind(this, widget)}\n                  moveDown={this.moveDown.bind(this, widget)}\n                  onDelete={this.onDelete.bind(this, widget.id)}\n                  updateWidgetType={this.updateWidgetType.bind(this, widget.id, widget)}\n                  updateWidgetName={this.updateWidgetName.bind(this, widget.id, widget)}\n                  updateWidgetContent={this.updateWidgetContent.bind(this, widget.id, widget)}\n                  updateHeadingSize={this.updateHeadingSize.bind(this, widget.id, widget)}\n                />\n              </div>\n            </div>\n          )\n          }\n          <div className=\"nav-item\" onClick={() => this.addWidget()}>\n            <i className=\"nav-link fa fa-plus-circle fa-2x\" />\n          </div>\n        </div>\n      </span>\n    )\n  }\n}\n\nconst stateToPropertyMapper = (state) => {\n  return {\n    widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    createWidget: (topicId) =>\n      dispatch(createWidget(topicId)),\n\n    findAllWidgetsForTopic: (topicId) =>\n      service.findWidgetsForTopic(topicId)\n        .then(actualWidgets =>\n          dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n    updateWidget: (widgetId, widget, widgets) =>\n      dispatch(updateWidget(widgetId, widget, widgets)),\n    // updateWidget: (widgetId, widget) =>\n    //     service.updateWidget(widgetId, widget)\n    //     .then(updatedWidget =>\n    //         dispatch(updateWidget(updatedWidget))),\n\n    deleteWidget: (widgetId) =>\n      dispatch(deleteWidget(widgetId)),\n\n    saveAllWidgets: (topicId, widgets) =>\n      service.saveAllWidgets(topicId, widgets)\n        .then(returnedWidgets =>\n          dispatch(saveAllWidgets(returnedWidgets))),\n\n    moveWidgetUp: (widget) =>\n      dispatch(moveWidgetUp(widget)),\n\n    moveWidgetDown: (widget) =>\n      dispatch(moveWidgetDown(widget))\n  }\n};\n\nexport default connect(\n  stateToPropertyMapper,\n  dispatchToPropertyMapper)\n  (WidgetListComponent)"]},"metadata":{},"sourceType":"module"}