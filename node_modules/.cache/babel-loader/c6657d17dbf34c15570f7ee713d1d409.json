{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget, saveAllWidgets, moveWidgetUp, moveWidgetDown } from '../../../actions/widgetActions';\nimport store from '../CourseEditorComponentStateful';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nimport WidgetBarComponent from \"./WidgetBarComponent\";\nconst service = new WidgetService();\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\nconst DEFAULT_HEADING_SIZE = 'Heading 1';\nconst DEFAULT_HEADING_TEXT = 'Heading text';\nconst DEFAULT_PARAGRAPH_TEXT = 'Paragraph text';\nconst DEFAULT_LIST_TYPE = false;\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: []\n    };\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    // this.props.createWidget(this.props.topicId);\n    this.setState({\n      widgets: [...this.state.widgets, {\n        name: '',\n        widgetType: 'Heading',\n        id: new Date().getTime() + \"\"\n      }]\n    });\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    this.setState({\n      widgets: newWidgets\n    }); // this.props.deleteWidget(widgetId);\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index - 1)\n    }); // this.props.moveWidgetUp(widget, this.state.widgets[index - 1]);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index + 1)\n    }); // this.props.moveWidgetDown(widget, this.state.widgets[index + 1]);\n  }\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget => widget.id === newWidget.id ? newWidget : widget)\n    }); // this.props.updateWidget(newWidget);\n  } // TODO: ALL THESE ARE UPDATE FUNCTIONS\n  // UTILIZE UPDATE WIDGET TO UPDATE ALL OF THESE\n\n\n  updateWidgetType(widget, type) {\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      widgetType: type\n    }; // TODO: added temporarly\n\n    this.setState({\n      widgets: this.state.widgets.map(widget => widget.id === newWidget.id ? newWidget : widget)\n    }); // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetName(widget, newName) {\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      name: newName\n    };\n    console.log(newWidget.name); // TODO: added temporarly\n\n    this.setState({\n      widgets: this.state.widgets.map(widget => widget.id === newWidget.id ? newWidget : widget)\n    }); // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetContent(widget, newText) {\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      text: newText\n    };\n    console.log(newWidget.text); // TODO\n    // TODO: added temporarly\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateHeadingSize(widget, heading) {\n    let c = heading[heading.length - 1];\n    let size = parseInt(c);\n    let newWidget = { ...widget,\n      topicId: this.props.topicId,\n      size: size\n    };\n    console.log(newWidget.headingSize); // TODO\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(widget);\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(SaveAndPreviewComponent, {\n      saveAll: this.onSaveAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.widgets && this.state.widgets.map((widget, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col container fluid wbdv-widget info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(WidgetBarComponent, {\n      type: !widget.widgetType ? HEADING : widget.widgetType,\n      widget: widget,\n      widgetOrder: index,\n      getLastElement: this.getLastElement.bind(this),\n      moveUp: this.moveUp.bind(this, widget),\n      moveDown: this.moveDown.bind(this, widget),\n      updateWidgetType: this.updateWidgetType.bind(this, widget),\n      onDelete: this.onDelete.bind(this, widget.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), (!widget.widgetType || widget.widgetType === HEADING) && React.createElement(HeadingWidgetComponent, {\n      key: widget.id,\n      widget: widget,\n      size: widget.size ? widget.size : DEFAULT_HEADING_SIZE,\n      name: widget.name ? '' : widget.name,\n      text: widget.text ? '' : widget.text,\n      updateWidgetContent: this.updateWidgetContent(this, widget) // TODO REMOVE FOLLOWING 3 WHEN CAN\n      ,\n      updateHeadingSize: this.updateHeadingSize(this, widget),\n      updateWidgetName: this.updateWidgetName(this, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), widget.widgetType === PARAGRAPH && React.createElement(ParagraphWidgetComponent, {\n      key: widget.id,\n      widget: widget,\n      name: widget.name ? '' : widget.name,\n      text: widget.text ? '' : widget.text,\n      updateWidgetContent: this.updateWidgetContent(this, widget) // TODO REMOVE FOLLOWING 2 WHEN CAN\n      ,\n      updateWidgetName: this.updateWidgetName(this, widget),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"nav-item\",\n      onClick: () => this.addWidget(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"nav-link fa fa-plus-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => dispatch(createWidget(topicId)),\n    findAllWidgetsForTopic: topicId => service.findWidgetsForTopic(topicId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: widget => dispatch(updateWidget(widget)),\n    deleteWidget: widgetId => dispatch(deleteWidget(widgetId)),\n    saveAllWidgets: (topicId, widgets) => service.saveAllWidgets(topicId, widgets).then(returnedWidgets => dispatch(saveAllWidgets(returnedWidgets))),\n    moveWidgetUp: (widget, other) => dispatch(moveWidgetUp(widget, other)),\n    moveWidgetDown: (widget, other) => dispatch(moveWidgetDown(widget, other))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","saveAllWidgets","moveWidgetUp","moveWidgetDown","store","HeadingWidgetComponent","ParagraphWidgetComponent","SaveAndPreviewComponent","WidgetService","WidgetBarComponent","service","HEADING","PARAGRAPH","IMAGE","LIST","DEFAULT_HEADING_SIZE","DEFAULT_HEADING_TEXT","DEFAULT_PARAGRAPH_TEXT","DEFAULT_LIST_TYPE","WidgetListComponent","Component","constructor","props","state","widgets","updateWidgets","componentDidUpdate","prevProps","topicId","onSaveAll","getLastElement","length","findWidgetsForTopic","setState","addWidget","name","widgetType","id","Date","getTime","onDelete","widgetId","newWidgets","filter","widget","swapElements","x","y","temp","index","moveUp","indexOf","moveDown","newWidget","map","updateWidgetType","type","updateWidgetName","newName","console","log","updateWidgetContent","newText","text","updateHeadingSize","heading","c","size","parseInt","headingSize","render","bind","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualWidgets","returnedWidgets","other"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport {\n  createWidget,\n  deleteWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  saveAllWidgets,\n  moveWidgetUp,\n  moveWidgetDown\n} from '../../../actions/widgetActions';\nimport store from '../CourseEditorComponentStateful';\nimport HeadingWidgetComponent from './HeadingWidgetComponent';\nimport ParagraphWidgetComponent from './ParagraphWidgetComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nimport WidgetBarComponent from \"./WidgetBarComponent\";\n\nconst service = new WidgetService();\n\nconst HEADING = 'Heading';\nconst PARAGRAPH = 'Paragraph';\nconst IMAGE = 'Image';\nconst LIST = 'List';\n\nconst DEFAULT_HEADING_SIZE = 'Heading 1';\nconst DEFAULT_HEADING_TEXT = 'Heading text';\nconst DEFAULT_PARAGRAPH_TEXT = 'Paragraph text';\nconst DEFAULT_LIST_TYPE = false;\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      widgets: [],\n    };\n\n    this.updateWidgets();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topicId !== this.props.topicId) {\n      this.updateWidgets();\n    }\n  }\n\n  async onSaveAll() {\n    await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({ widgets: widgets });\n  }\n\n  async addWidget() {\n    // this.props.createWidget(this.props.topicId);\n    this.setState({\n      widgets: [...this.state.widgets,\n      { name: '', widgetType: 'Heading', id: (new Date()).getTime() + \"\" }]\n    })\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    this.setState({ widgets: newWidgets });\n    // this.props.deleteWidget(widgetId);\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    \n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index - 1) });\n    \n    // this.props.moveWidgetUp(widget, this.state.widgets[index - 1]);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n\n    this.setState(\n      { widgets: this.swapElements(this.state.widgets, index, index + 1) });\n    \n      // this.props.moveWidgetDown(widget, this.state.widgets[index + 1]);\n  }\n\n\n  updateWidget(newWidget) {\n    this.setState({\n      widgets: this.state.widgets.map(widget =>\n        widget.id === newWidget.id ? newWidget : widget)\n    });\n    // this.props.updateWidget(newWidget);\n  }\n\n  // TODO: ALL THESE ARE UPDATE FUNCTIONS\n  // UTILIZE UPDATE WIDGET TO UPDATE ALL OF THESE\n\n  updateWidgetType(widget, type) {\n    let newWidget = { ...widget, topicId: this.props.topicId, widgetType: type };\n    \n    // TODO: added temporarly\n    this.setState({\n      widgets: this.state.widgets.map(widget =>\n        widget.id === newWidget.id ? newWidget : widget)\n    });\n    \n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n\n  updateWidgetName(widget, newName) {\n    let newWidget = { ...widget, topicId: this.props.topicId, name: newName };\n    console.log(newWidget.name);\n    \n    // TODO: added temporarly\n    this.setState({\n      widgets: this.state.widgets.map(widget =>\n        widget.id === newWidget.id ? newWidget : widget)\n    });\n    \n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n  \n  updateWidgetContent(widget, newText) {\n    let newWidget = { ...widget, topicId: this.props.topicId, text: newText };\n    console.log(newWidget.text); // TODO\n    \n    // TODO: added temporarly\n    \n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(newWidget);\n  }\n  \n  updateHeadingSize(widget, heading) {\n    let c = heading[heading.length - 1];\n    let size = parseInt(c);\n    let newWidget = { ...widget, topicId: this.props.topicId, size: size };\n    console.log(newWidget.headingSize); // TODO\n\n    // this.updateWidget(newWidget);\n    // this.props.updateWidget(widget);\n  }\n\n  render() {\n    return (\n      <span>\n        <SaveAndPreviewComponent\n          saveAll={this.onSaveAll.bind(this)}/>\n        <div>\n          {this.state.widgets && this.state.widgets.map((widget, index) =>\n            <div>\n              <div className={\"col container fluid wbdv-widget info\"}>\n                <WidgetBarComponent\n                  type={!widget.widgetType ? HEADING : widget.widgetType}\n                  widget={widget}\n                  widgetOrder={index}\n                  getLastElement={this.getLastElement.bind(this)}\n                  moveUp={this.moveUp.bind(this, widget)}\n                  moveDown={this.moveDown.bind(this, widget)}\n                  updateWidgetType={this.updateWidgetType.bind(this, widget)}\n                  onDelete={this.onDelete.bind(this, widget.id)}/>\n\n                {(!widget.widgetType || widget.widgetType === HEADING) &&\n                  <HeadingWidgetComponent\n                    key={widget.id}\n                    widget={widget}\n                    size={widget.size ? widget.size : DEFAULT_HEADING_SIZE}\n                    name={widget.name ? '' : widget.name}\n                    text={widget.text ? '' : widget.text}\n                    updateWidgetContent={this.updateWidgetContent(this, widget)} // TODO REMOVE FOLLOWING 3 WHEN CAN\n                    updateHeadingSize={this.updateHeadingSize(this, widget)}\n                    updateWidgetName={this.updateWidgetName(this, widget)}/>}\n\n                {widget.widgetType === PARAGRAPH &&\n                  <ParagraphWidgetComponent\n                    key={widget.id}\n                    widget={widget}\n                    name={widget.name ? '' : widget.name}\n                    text={widget.text ? '' : widget.text}\n                    updateWidgetContent={this.updateWidgetContent(this, widget)} // TODO REMOVE FOLLOWING 2 WHEN CAN\n                    updateWidgetName={this.updateWidgetName(this, widget)}/>}\n              </div>\n            </div>\n          )\n          }\n          <div className=\"nav-item\" onClick={() => this.addWidget()}>\n            <i className=\"nav-link fa fa-plus-circle fa-2x\" />\n          </div>\n        </div>\n      </span>\n    )\n  }\n}\n\nconst stateToPropertyMapper = (state) => {\n  return {\n    widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    createWidget: (topicId) =>\n      dispatch(createWidget(topicId)),\n\n    findAllWidgetsForTopic: (topicId) =>\n      service.findWidgetsForTopic(topicId)\n        .then(actualWidgets =>\n          dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n    updateWidget: (widget) =>\n      dispatch(updateWidget(widget)),\n\n    deleteWidget: (widgetId) =>\n      dispatch(deleteWidget(widgetId)),\n\n    saveAllWidgets: (topicId, widgets) =>\n      service.saveAllWidgets(topicId, widgets)\n        .then(returnedWidgets =>\n          dispatch(saveAllWidgets(returnedWidgets))),\n\n    moveWidgetUp: (widget, other) =>\n      dispatch(moveWidgetUp(widget, other)),\n\n    moveWidgetDown: (widget, other) =>\n      dispatch(moveWidgetDown(widget, other))\n  }\n};\n\nexport default connect(\n  stateToPropertyMapper,\n  dispatchToPropertyMapper)\n  (WidgetListComponent)"]},"metadata":{},"sourceType":"module"}