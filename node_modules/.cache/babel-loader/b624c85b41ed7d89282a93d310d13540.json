{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createModule, deleteModule, findAllModulesForCourse, updateModule } from '../../../actions/moduleActions';\nimport ModuleService from '../../../services/ModuleService';\nimport ModuleListItem from './ModuleListItem';\nconst moduleService = new ModuleService();\n\nclass ModuleListComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editingModuleId: '',\n      selectedModule: null\n    };\n  }\n\n  componentDidMount() {\n    moduleService.findModulesForCourse(this.props.courseId);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.moduleId !== prevProps.moduleId) {\n      moduleService.findModulesForCourse(this.props.courseId);\n    }\n  }\n\n  updateModuleTitle(event) {\n    this.setState(prevState => ({\n      module: { ...prevState.module,\n        title: event.target.value\n      }\n    }));\n  }\n\n  // make highlighted, change URL to inclide module,\n  // and render all lessons related to the module\n  findAllModulesForModule(module) {\n    this.setState({\n      selectedModule: module\n    });\n    this.props.history.push(`/course/${this.props.courseId}/module/${module._id}`);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group wbdv-module-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.modules && this.props.modules.map(module => React.createElement(\"li\", {\n      className: \"list-group-item wbdv-module-item wbdv-module-item-title\",\n      onClick: () => this.findAllModulesForModule(module),\n      key: module._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: `nav-link\n                      ${this.state.editingModuleId === module._id || this.state.selectedModule === module ? 'active' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.editingModuleId !== module._id && React.createElement(Link, {\n      to: `/lessons/${lessonId}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, module.title), React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => this.props.deleteModule(this.props.moduleId),\n      className: \"fa fa-trash fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-pencil fa-2x\",\n      onClick: e => this.setState(prevState => ({\n        editingModuleId: ''\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })))))), React.createElement(\"i\", {\n      onClick: () => this.props.createModule(this.props.moduleId),\n      id: \"wbdv-add-course\",\n      className: \"fa fa-plus-circle fa-3x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    modules: state.modules.modules\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createModule: courseId => moduleService.createModule(courseId, {\n      title: 'New module'\n    }).then(actualModule => dispatch(createModule(actualModule, courseId))),\n    findAllModulesForCourse: courseId => moduleService.findModulesForCourse(courseId).then(actualModules => dispatch(findAllModulesForCourse(actualModules))),\n    // Instead of first getting the modules for course then dispatching the list of modules,\n    // you should instead dispatch something like this:\n    // dispatch({ type: SET_SELECTED_COURSE, courseId: courseId })\n    updateModule: (moduleId, module) => moduleService.updateModule(moduleId, module).then(updatedModule => dispatch(updateModule(updatedModule))),\n    deleteModule: moduleId => moduleService.deleteModule(moduleId).then(status => dispatch(deleteModule(moduleId)))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(ModuleListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListComponent.js"],"names":["React","connect","Link","createModule","deleteModule","findAllModulesForCourse","updateModule","ModuleService","ModuleListItem","moduleService","ModuleListComponent","Component","state","editingModuleId","selectedModule","componentDidMount","findModulesForCourse","props","courseId","componentDidUpdate","prevProps","prevState","snapshot","moduleId","updateModuleTitle","event","setState","module","title","target","value","findAllModulesForModule","history","push","_id","render","modules","map","lessonId","e","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualModule","actualModules","updatedModule","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom'\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport {createModule, deleteModule, findAllModulesForCourse, updateModule} from '../../../actions/moduleActions'\nimport ModuleService from '../../../services/ModuleService';\nimport ModuleListItem from './ModuleListItem';\n\nconst moduleService = new ModuleService();\n\nclass ModuleListComponent extends React.Component {\n    componentDidMount() {\n        moduleService.findModulesForCourse(this.props.courseId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.moduleId !== prevProps.moduleId) {\n            moduleService.findModulesForCourse(this.props.courseId);\n        }\n    }\n\n    updateModuleTitle(event) {\n      this.setState(prevState => ({\n        module: {\n          ...prevState.module,\n          title: event.target.value\n        }}))\n    }\n\n    state = {\n        editingModuleId: '',\n        selectedModule: null\n    };\n\n    // make highlighted, change URL to inclide module,\n    // and render all lessons related to the module\n    findAllModulesForModule(module) {\n      this.setState({selectedModule: module});\n      this.props.history.push(`/course/${this.props.courseId}/module/${module._id}`);\n    }\n\n    render() {\n        return (\n          <div>\n            <ul className=\"list-group wbdv-module-list\">\n                {this.props.modules && this.props.modules.map(module =>\n                    <li className=\"list-group-item wbdv-module-item wbdv-module-item-title\"\n                      onClick={() => this.findAllModulesForModule(module)} key={module._id}>\n                      \n                    <a className={`nav-link\n                      ${(this.state.editingModuleId === module._id ||\n                        this.state.selectedModule === module) ? 'active':''}`}>\n\n                          {this.state.editingModuleId !== module._id &&\n                            <Link to={`/lessons/${lessonId}`}>{module.title}</Link>}\n\n                          {/* {this.state.editingModuleId === module._id &&\n                          <div>\n                          <input onChange={(e) => this.updateModuleTitle(e)}\n                            value={this.state.module.title}/>\n                            <i className=\"fa-2x fa fa-check\"\n                            onClick={() => {\n                              this.props.updateModule(this.state.module).then(() =>\n                              this.setState({editingModuleId: ''}))}}/>\n                          </div>} */}\n                      <span className=\"float-right\">\n                        <i onClick={() => this.props.deleteModule(this.props.moduleId)}\n                          className=\"fa fa-trash fa-2x\"/>\n                        <i className=\"fa fa-pencil fa-2x\"\n                        onClick={(e) => this.setState(prevState => ({editingModuleId: ''}))}/>\n                      </span>\n                      </a>\n                    </li>\n                )}\n              </ul>\n                <i onClick={() => this.props.createModule(this.props.moduleId)}\n                  id=\"wbdv-add-course\" className=\"fa fa-plus-circle fa-3x\"/>\n            </div>\n        );\n    }\n}\n\nconst stateToPropertyMapper = (state) => {\n    return {\n        modules: state.modules.modules\n    }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        createModule: (courseId) =>\n            moduleService.createModule(courseId, {title: 'New module'})\n            .then(actualModule =>\n                dispatch(createModule(actualModule, courseId))),\n\n        findAllModulesForCourse: (courseId) =>\n            moduleService.findModulesForCourse(courseId)\n            .then(actualModules =>\n                dispatch(findAllModulesForCourse(actualModules))),\n        // Instead of first getting the modules for course then dispatching the list of modules,\n        // you should instead dispatch something like this:\n        // dispatch({ type: SET_SELECTED_COURSE, courseId: courseId })\n\n        updateModule: (moduleId, module) =>\n            moduleService.updateModule(moduleId, module)\n            .then(updatedModule =>\n                dispatch(updateModule(updatedModule))),\n\n        deleteModule: (moduleId) =>\n            moduleService.deleteModule(moduleId)\n            .then(status =>\n                dispatch(deleteModule(moduleId)))\n    }\n}\n\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper)\n(ModuleListComponent)"]},"metadata":{},"sourceType":"module"}