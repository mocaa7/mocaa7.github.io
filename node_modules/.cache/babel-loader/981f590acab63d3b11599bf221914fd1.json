{"ast":null,"code":"import { CREATE_WIDGET, DELETE_WIDGET, UPDATE_WIDGET, FIND_ALL_WIDGETS_FOR_TOPIC, MOVE_WIDGET_UP, SAVE_ALL_WIDGETS } from '../actions/widgetActions';\n\nconst widgetReducer = (state = {\n  widgets: []\n}, action) => {\n  switch (action.type) {\n    case FIND_ALL_WIDGETS_FOR_TOPIC:\n      return {\n        widgets: action.widgets\n      };\n\n    case CREATE_WIDGET:\n      return {\n        widgets: [...state.widgets, action.newWidget]\n      };\n\n    case DELETE_WIDGET:\n      return {\n        widgets: state.widgets.filter(widget => widget._id !== action.widgetId)\n      };\n\n    case UPDATE_WIDGET:\n      return {\n        widgets: state.widgets.map(widget => widget._id === action.widgetId ? action.widget : widget)\n      };\n\n    case MOVE_WIDGET_UP:\n      var index = state.widgets.indexOf(action.widget);\n      state.widgets.swap(index, index - 1);\n      return {\n        widgets: state.widgets\n      };\n\n    case MOVE_WIDGET_UP:\n      var index = state.widgets.indexOf(action.widget);\n      state.widgets.swap(index, index + 1);\n      return {\n        widgets: state.widgets\n      };\n\n    case SAVE_ALL_WIDGETS:\n      return {\n        widgets: widgets\n      };\n\n    default:\n      return state;\n  }\n};\n\nArray.prototype.swap = function (x, y) {\n  var b = this[x];\n  this[x] = this[y];\n  this[y] = b;\n  this[x].index = y;\n  this[y].index = x;\n  return this;\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/reducers/widgetReducer.js"],"names":["CREATE_WIDGET","DELETE_WIDGET","UPDATE_WIDGET","FIND_ALL_WIDGETS_FOR_TOPIC","MOVE_WIDGET_UP","SAVE_ALL_WIDGETS","widgetReducer","state","widgets","action","type","newWidget","filter","widget","_id","widgetId","map","index","indexOf","swap","Array","prototype","x","y","b"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,0BAJJ,EAKIC,cALJ,EAMIC,gBANJ,QAOO,0BAPP;;AASA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,OAAO,EAAE;AAAV,CAAT,EAAwBC,MAAxB,KAAmC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,0BAAL;AACE,aAAO;AAACK,QAAAA,OAAO,EAAEC,MAAM,CAACD;AAAjB,OAAP;;AACF,SAAKR,aAAL;AACE,aAAO;AAACQ,QAAAA,OAAO,EAAE,CAAC,GAAGD,KAAK,CAACC,OAAV,EAAmBC,MAAM,CAACE,SAA1B;AAAV,OAAP;;AACF,SAAKV,aAAL;AACE,aAAO;AAACO,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAArD;AAAV,OAAP;;AACF,SAAKb,aAAL;AACE,aAAO;AAACM,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcQ,GAAd,CAAkBH,MAAM,IACvCA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACM,QAAtB,GAAiCN,MAAM,CAACI,MAAxC,GAAiDA,MADlC;AAAV,OAAP;;AAGF,SAAKT,cAAL;AACE,UAAIa,KAAK,GAAGV,KAAK,CAACC,OAAN,CAAcU,OAAd,CAAsBT,MAAM,CAACI,MAA7B,CAAZ;AACAN,MAAAA,KAAK,CAACC,OAAN,CAAcW,IAAd,CAAmBF,KAAnB,EAA0BA,KAAK,GAAG,CAAlC;AACA,aAAO;AAACT,QAAAA,OAAO,EAAED,KAAK,CAACC;AAAhB,OAAP;;AAEF,SAAKJ,cAAL;AACE,UAAIa,KAAK,GAAGV,KAAK,CAACC,OAAN,CAAcU,OAAd,CAAsBT,MAAM,CAACI,MAA7B,CAAZ;AACAN,MAAAA,KAAK,CAACC,OAAN,CAAcW,IAAd,CAAmBF,KAAnB,EAA0BA,KAAK,GAAG,CAAlC;AACA,aAAO;AAACT,QAAAA,OAAO,EAAED,KAAK,CAACC;AAAhB,OAAP;;AAEA,SAAKH,gBAAL;AACA,aAAO;AAACG,QAAAA,OAAO,EAAEA;AAAV,OAAP;;AACF;AACE,aAAOD,KAAP;AAxBN;AA0BH,CA3BD;;AA6BAa,KAAK,CAACC,SAAN,CAAgBF,IAAhB,GAAuB,UAAUG,CAAV,EAAaC,CAAb,EAAgB;AACrC,MAAIC,CAAC,GAAG,KAAKF,CAAL,CAAR;AACA,OAAKA,CAAL,IAAU,KAAKC,CAAL,CAAV;AACA,OAAKA,CAAL,IAAUC,CAAV;AAEA,OAAKF,CAAL,EAAQL,KAAR,GAAgBM,CAAhB;AACA,OAAKA,CAAL,EAAQN,KAAR,GAAgBK,CAAhB;AACA,SAAO,IAAP;AACD,CARD;;AAUA,eAAehB,aAAf","sourcesContent":["import {\n    CREATE_WIDGET,\n    DELETE_WIDGET,\n    UPDATE_WIDGET,\n    FIND_ALL_WIDGETS_FOR_TOPIC,\n    MOVE_WIDGET_UP,\n    SAVE_ALL_WIDGETS\n} from '../actions/widgetActions';\n\nconst widgetReducer = (state = {widgets: []}, action) => {\n    switch(action.type) {\n        case FIND_ALL_WIDGETS_FOR_TOPIC:\n          return {widgets: action.widgets};\n        case CREATE_WIDGET:\n          return {widgets: [...state.widgets, action.newWidget]};\n        case DELETE_WIDGET:\n          return {widgets: state.widgets.filter(widget => widget._id !== action.widgetId)};\n        case UPDATE_WIDGET:\n          return {widgets: state.widgets.map(widget =>\n            widget._id === action.widgetId ? action.widget : widget)};\n        \n        case MOVE_WIDGET_UP:\n          var index = state.widgets.indexOf(action.widget);\n          state.widgets.swap(index, index - 1);\n          return {widgets: state.widgets};\n        \n        case MOVE_WIDGET_UP:\n          var index = state.widgets.indexOf(action.widget);\n          state.widgets.swap(index, index + 1);\n          return {widgets: state.widgets};\n        \n          case SAVE_ALL_WIDGETS:\n          return {widgets: widgets};\n        default:\n          return state\n      }\n};\n\nArray.prototype.swap = function (x, y) {\n  var b = this[x];\n  this[x] = this[y];\n  this[y] = b;\n\n  this[x].index = y;\n  this[y].index = x;\n  return this;\n}\n\nexport default widgetReducer;"]},"metadata":{},"sourceType":"module"}