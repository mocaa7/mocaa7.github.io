{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport { createWidget, deleteWidget, findAllWidgetsForTopic, updateWidget, saveAllWidgets, moveWidgetUp, moveWidgetDown } from '../../../actions/widgetActions';\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService';\nconst service = new WidgetService();\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      widgets: []\n    };\n    this.updateWidgets();\n  }\n\n  async onSaveAll() {\n    const widgetState = await this.props.saveAllWidgets(this.props.topicId, this.state.widgets);\n    const widgets = widgetState.widgets;\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({\n      widgets: widgets\n    });\n  }\n\n  async addWidget() {\n    this.setState({\n      widgets: [...this.state.widgets, {\n        name: 'New widget',\n        widgetType: 'Heading'\n      }]\n    });\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    const widgetState = this.props.deleteWidget(widgetId, newWidgets);\n    this.setState({\n      widgets: widgetState.widgets\n    });\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index - 1)\n    });\n    this.props.moveWidgetUp(widget, this.state.widgets);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState({\n      widgets: this.swapElements(this.state.widgets, index, index + 1)\n    });\n    this.props.moveWidgetDown(widget, this.state.widgets);\n  }\n\n  updateWidget(widgetId, widget) {\n    widget.topicId = this.props.topicId;\n    let newWidgets = this.state.widgets.map(curWidget => curWidget.id === widgetId ? widget : widget);\n    this.setState({\n      widgets: newWidgets\n    });\n    this.props.updateWidget(widgetId, widget);\n  } //TODO: is this how we update one widget?\n  // Update one widget\n  // we need to pass update to each item\n  // updateOneWidget(newWidget) {\n  //   this.state.widgets.forEach(widget => {\n  //     if (widget.id === newWidget.id) {\n  //       return newWidget;\n  //     }\n  //   });\n  // }\n\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, JSON.stringify(this.state.widgets)), React.createElement(SaveAndPreviewComponent, {\n      saveAll: this.onSaveAll.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.widgets && this.state.widgets.map((widget, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(WidgetListItemComponent, {\n      key: widget.id,\n      getLastElement: this.getLastElement.bind(this),\n      index: index,\n      widget: widget,\n      moveUp: this.moveUp.bind(this, widget),\n      moveDown: this.moveDown.bind(this, widget),\n      onDelete: this.onDelete.bind(this, widget.id),\n      updateWidget: this.updateWidget.bind(this, widget.id, widget) // updateWidget={this.props.updateWidget} // TODO: remove this later on\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"nav-item\",\n      onClick: () => this.addWidget(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"nav-link fa fa-plus-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    widgets: state.widgets.widgets\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createWidget: topicId => service.createWidget(topicId, {\n      name: 'New widget',\n      widgetType: 'Heading'\n    }).then(actualWidget => dispatch(createWidget(actualWidget, topicId))),\n    findAllWidgetsForTopic: topicId => service.findWidgetsForTopic(topicId).then(actualWidgets => dispatch(findAllWidgetsForTopic(actualWidgets))),\n    updateWidget: (widgetId, widget) => dispatch(updateWidget(widgetId, widget)),\n    // updateWidget: (widgetId, widget) =>\n    //     service.updateWidget(widgetId, widget)\n    //     .then(updatedWidget =>\n    //         dispatch(updateWidget(updatedWidget))),\n    deleteWidget: (widgetId, widgets) => dispatch(deleteWidget(widgetId, widgets)),\n    saveAllWidgets: (topicId, widgets) => service.saveAllWidgets(topicId, widgets).then(returnedWidgets => dispatch(saveAllWidgets(returnedWidgets))),\n    moveWidgetUp: widget => dispatch(moveWidgetUp(widget)),\n    moveWidgetDown: widget => dispatch(moveWidgetDown(widget))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(WidgetListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Widgets/WidgetListComponent.js"],"names":["React","connect","createWidget","deleteWidget","findAllWidgetsForTopic","updateWidget","saveAllWidgets","moveWidgetUp","moveWidgetDown","WidgetListItemComponent","SaveAndPreviewComponent","WidgetService","service","WidgetListComponent","Component","constructor","props","state","widgets","updateWidgets","onSaveAll","widgetState","topicId","setState","getLastElement","length","findWidgetsForTopic","addWidget","name","widgetType","onDelete","widgetId","newWidgets","filter","widget","id","swapElements","x","y","temp","index","moveUp","indexOf","moveDown","map","curWidget","render","JSON","stringify","bind","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualWidget","actualWidgets","returnedWidgets"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport {\n  createWidget,\n  deleteWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  saveAllWidgets,\n  moveWidgetUp,\n  moveWidgetDown\n} from '../../../actions/widgetActions'\nimport WidgetListItemComponent from './WidgetListItemComponent';\nimport SaveAndPreviewComponent from './SaveAndPreviewComponent';\nimport WidgetService from '../../../services/WidgetService'\n\nconst service = new WidgetService();\n\nclass WidgetListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      widgets: [],\n    };\n\n    this.updateWidgets();\n  }\n\n  async onSaveAll() {\n    const widgetState = await this.props.saveAllWidgets(\n        this.props.topicId, this.state.widgets);\n    const widgets = widgetState.widgets;\n    this.setState({widgets: widgets});\n  }\n\n  getLastElement() {\n    return this.state.widgets.length - 1;\n  }\n\n  async updateWidgets() {\n    const widgets = await service.findWidgetsForTopic(this.props.topicId);\n    this.setState({widgets: widgets});\n  }\n\n  async addWidget() {\n    this.setState({widgets: [...this.state.widgets, {name: 'New widget', widgetType: 'Heading'}]})\n  }\n\n  onDelete(widgetId) {\n    let newWidgets = this.state.widgets.filter(widget => widget.id !== widgetId);\n    const widgetState = this.props.deleteWidget(widgetId, newWidgets);\n    this.setState({widgets: widgetState.widgets});\n  }\n\n  swapElements(widgets, x, y) {\n    let temp = widgets[x];\n    widgets[x] = widgets[y];\n    widgets[y] = temp;\n    widgets[x].index = x;\n    widgets[y].index = y;\n    return widgets;\n  }\n\n  async moveUp(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n        {widgets: this.swapElements(this.state.widgets, index, index - 1)});\n    this.props.moveWidgetUp(widget, this.state.widgets);\n  }\n\n  async moveDown(widget) {\n    let index = this.state.widgets.indexOf(widget);\n    this.setState(\n        {widgets: this.swapElements(this.state.widgets, index, index + 1)});\n    this.props.moveWidgetDown(widget, this.state.widgets);\n  }\n\n  updateWidget(widgetId, widget) {\n    widget.topicId = this.props.topicId;\n\n    let newWidgets = this.state.widgets.map(\n        curWidget => curWidget.id === widgetId ? widget: widget);\n\n    this.setState({widgets: newWidgets});\n    this.props.updateWidget(widgetId, widget);\n  }\n\n  //TODO: is this how we update one widget?\n  // Update one widget\n  // we need to pass update to each item\n\n  // updateOneWidget(newWidget) {\n  //   this.state.widgets.forEach(widget => {\n  //     if (widget.id === newWidget.id) {\n  //       return newWidget;\n  //     }\n  //   });\n  // }\n\n  render() {\n    return (\n        <span>\n        {/* TODO: do not forget to remove this */}\n          <div>{JSON.stringify(this.state.widgets)}</div>\n\n        <SaveAndPreviewComponent\n            saveAll={this.onSaveAll.bind(this)}/>\n        <div>\n          {this.state.widgets && this.state.widgets.map((widget, index) =>\n              <div>\n                <WidgetListItemComponent\n                    key={widget.id}\n                    getLastElement={this.getLastElement.bind(this)}\n                    index={index}\n                    widget={widget}\n                    moveUp={this.moveUp.bind(this, widget)}\n                    moveDown={this.moveDown.bind(this, widget)}\n                    onDelete={this.onDelete.bind(this, widget.id)}\n                    updateWidget={this.updateWidget.bind(this, widget.id, widget)}\n                    // updateWidget={this.props.updateWidget} // TODO: remove this later on\n                />\n              </div>)\n          }\n          <div className=\"nav-item\" onClick={() => this.addWidget()}>\n            <i className=\"nav-link fa fa-plus-circle fa-2x\"/>\n          </div>\n        </div>\n      </span>\n    )\n  }\n}\n\nconst stateToPropertyMapper = (state) => {\n  return {\n    widgets: state.widgets.widgets\n  }\n};\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    createWidget: (topicId) =>\n        service.createWidget(topicId,\n            {name: 'New widget', widgetType: 'Heading'})\n        .then(actualWidget =>\n            dispatch(createWidget(actualWidget, topicId))),\n\n    findAllWidgetsForTopic: (topicId) =>\n        service.findWidgetsForTopic(topicId)\n        .then(actualWidgets =>\n            dispatch(findAllWidgetsForTopic(actualWidgets))),\n\n    updateWidget: (widgetId, widget) =>\n            dispatch(updateWidget(widgetId, widget)),\n    // updateWidget: (widgetId, widget) =>\n    //     service.updateWidget(widgetId, widget)\n    //     .then(updatedWidget =>\n    //         dispatch(updateWidget(updatedWidget))),\n\n    deleteWidget: (widgetId, widgets) =>\n        dispatch(deleteWidget(widgetId, widgets)),\n\n    saveAllWidgets: (topicId, widgets) =>\n        service.saveAllWidgets(topicId, widgets)\n        .then(returnedWidgets =>\n            dispatch(saveAllWidgets(returnedWidgets))),\n\n    moveWidgetUp: (widget) =>\n        dispatch(moveWidgetUp(widget)),\n\n    moveWidgetDown: (widget) =>\n        dispatch(moveWidgetDown(widget))\n  }\n};\n\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper)\n(WidgetListComponent)"]},"metadata":{},"sourceType":"module"}