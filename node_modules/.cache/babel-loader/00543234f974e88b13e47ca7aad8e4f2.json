{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListComponent.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css';\nimport '../../CourseManager/CourseManager.css';\nimport { createModule, deleteModule, findAllModulesForCourse, updateModule } from '../../../actions/moduleActions';\nimport ModuleService from '../../../services/ModuleService';\nimport ModuleListItem from './ModuleListItem';\nimport { getNodeText } from \"@testing-library/react\";\nconst service = new ModuleService();\n\nclass ModuleListComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedModule: null,\n      editingModule: null,\n      modules: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateModules();\n  }\n\n  async updateModules() {\n    const modules = await service.findModulesForCourse(this.props.courseId);\n    this.setState({\n      modules: modules\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('componentDidUpdate');\n\n    if (this.props.courseId !== prevProps.courseId) {\n      console.log('course ID or state changed');\n      this.updateModules();\n    }\n  } // updateModuleTitle(event) {\n  //   this.setState(prevState => (\n  //     {module: {...prevState.module, title: event.target.value}}\n  //   ))\n  // }\n\n\n  toggleSelectedModule(module) {\n    this.props.history.push(`/course/${this.props.courseId}/module/${module._id}`);\n    this.setState({\n      selectedModule: module\n    }); // if (this.state.selectedModule === module) {\n    //   this.props.history.push(`/course/${this.props.courseId}`)\n    //   this.setState({selectedModule: null});\n    // }\n  }\n\n  async deleteModule(moduleId) {\n    await this.props.deleteModule(moduleId);\n    this.updateModules();\n  }\n\n  async addModule() {\n    await this.props.createModule(this.props.courseId);\n    this.updateModules();\n  }\n\n  async saveModule(module) {\n    this.setState({\n      editingModule: null\n    });\n    await this.props.updateModule(module._id, module);\n    this.updateModules();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group wbdv-module-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.modules && this.state.modules.map(module => // <li className={`list-group-item wbdv-module-item wbdv-module-item-title\n    //   ${this.state.selectedModule === module ? 'active' : ''}`}\n    //   key={module._id}>\n    React.createElement(\"li\", {\n      className: `list-group-item wbdv-module-item wbdv-module-item-title\n                      ${this.state.selectedModule === module ? 'active' : ''}`,\n      onClick: () => this.toggleSelectedModule(module),\n      key: module._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.editingModule !== module && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, module.title, React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-2x\",\n      onClick: () => this.deleteModule(module._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fa fa-pencil fa-2x\",\n      onClick: () => this.setState({\n        editingModule: module\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), this.state.editingModule === module && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      autofocus: \"autofocus\",\n      className: \"typing-container\",\n      value: module.title,\n      onChange: e => {\n        module.title = e.target.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-check fa-2x\",\n      onClick: () => this.saveModule(module),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))))), React.createElement(\"i\", {\n      className: \"fa fa-plus-circle fa-3x wbdv-add\",\n      onClick: () => this.addModule(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst stateToPropertyMapper = state => {\n  return {\n    modules: state.modules.modules\n  };\n};\n\nconst dispatchToPropertyMapper = dispatch => {\n  return {\n    createModule: courseId => service.createModule(courseId, {\n      title: 'New module'\n    }).then(actualModule => dispatch(createModule(actualModule, courseId))),\n    findAllModulesForCourse: courseId => service.findModulesForCourse(courseId).then(actualModules => dispatch(findAllModulesForCourse(actualModules))),\n    // TODO: Instead of first getting the modules for course then dispatching the list of modules,\n    // you should instead dispatch something like this:\n    // dispatch({ type: SET_SELECTED_COURSE, courseId: courseId })\n    updateModule: (moduleId, module) => service.updateModule(moduleId, module).then(updatedModule => dispatch(updateModule(updatedModule))),\n    deleteModule: moduleId => service.deleteModule(moduleId).then(status => dispatch(deleteModule(moduleId)))\n  };\n};\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(ModuleListComponent);","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/components/CourseEditor/Modules/ModuleListComponent.js"],"names":["React","connect","Link","createModule","deleteModule","findAllModulesForCourse","updateModule","ModuleService","ModuleListItem","getNodeText","service","ModuleListComponent","Component","state","selectedModule","editingModule","modules","componentDidMount","updateModules","findModulesForCourse","props","courseId","setState","componentDidUpdate","prevProps","prevState","snapshot","console","log","toggleSelectedModule","module","history","push","_id","moduleId","addModule","saveModule","render","map","title","e","target","value","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","actualModule","actualModules","updatedModule","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom'\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../../CourseEditor/CourseEditor.css'\nimport '../../CourseManager/CourseManager.css'\nimport {createModule, deleteModule, findAllModulesForCourse, updateModule} from '../../../actions/moduleActions'\nimport ModuleService from '../../../services/ModuleService';\nimport ModuleListItem from './ModuleListItem';\nimport { getNodeText } from \"@testing-library/react\";\n\nconst service = new ModuleService();\n\nclass ModuleListComponent extends React.Component {\n    componentDidMount() {\n      this.updateModules();\n    }\n\n    async updateModules() {\n      const modules = await service.findModulesForCourse(this.props.courseId);\n      this.setState({modules: modules});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n      console.log('componentDidUpdate');\n      if (this.props.courseId !== prevProps.courseId) {\n        console.log('course ID or state changed');\n        this.updateModules();\n      }\n    }\n\n    // updateModuleTitle(event) {\n    //   this.setState(prevState => (\n    //     {module: {...prevState.module, title: event.target.value}}\n    //   ))\n    // }\n\n    state = {\n      selectedModule: null,\n      editingModule: null,\n      modules: []\n    };\n\n    toggleSelectedModule(module) {\n      this.props.history.push(`/course/${this.props.courseId}/module/${module._id}`)\n      this.setState({selectedModule: module});\n      // if (this.state.selectedModule === module) {\n      //   this.props.history.push(`/course/${this.props.courseId}`)\n      //   this.setState({selectedModule: null});\n      // }\n    }\n\n    async deleteModule(moduleId) {\n      await this.props.deleteModule(moduleId);\n      this.updateModules();\n    }\n\n    async addModule() {\n      await this.props.createModule(this.props.courseId);\n      this.updateModules();\n    }\n\n    async saveModule(module) {\n      this.setState({editingModule: null});\n      await this.props.updateModule(module._id, module);\n      this.updateModules();\n    }\n\n    \n\n    render() {\n        return (\n          <div>\n            <ul className=\"list-group wbdv-module-list\">\n                {this.state.modules && this.state.modules.map(module =>\n                    // <li className={`list-group-item wbdv-module-item wbdv-module-item-title\n                    //   ${this.state.selectedModule === module ? 'active' : ''}`}\n                    //   key={module._id}>\n                    <li className={`list-group-item wbdv-module-item wbdv-module-item-title\n                      ${this.state.selectedModule === module ? 'active' : ''}`}\n                      onClick={() => this.toggleSelectedModule(module)} key={module._id}>\n                      \n                          {/* {this.state.editingModuleId === module._i                         <div>\n                          <input onChange={(e) => this.updateModuleTitle(e)}\n                            value={this.state.module.title}/>\n                            <i className=\"fa-2x fa fa-check\"\n                            onClick={() => {\n                              this.props.updateModule(this.state.module).then(() =>\n                              this.setState({editingModuleId: ''}))}}/>\n                          </div>} */}\n                      {this.state.editingModule !== module &&\n                        <div>{module.title}\n                          <span className=\"float-right\">\n                            <i className=\"fa fa-trash fa-2x\"\n                              onClick={() => this.deleteModule(module._id)}/>\n                            <i className=\"fa fa-pencil fa-2x\"\n                              onClick={() => this.setState({editingModule: module})}/>\n                          </span>\n                        </div>\n                      }\n                      {this.state.editingModule === module &&\n                        <div>\n                          <input type=\"text\" autofocus=\"autofocus\"\n                          className=\"typing-container\" value={module.title}\n                          onChange={(e) => {module.title = e.target.value}}/>\n                          <span className=\"float-right\">\n                            <i className=\"fa fa-check fa-2x\"\n                              onClick={() => this.saveModule(module)}/>\n                          </span>\n                        </div>\n                      }\n                    </li>\n                )}\n                </ul>\n                <i className=\"fa fa-plus-circle fa-3x wbdv-add\"\n                  onClick={() => this.addModule()}/>\n            </div>\n        );\n    }\n}\n\nconst stateToPropertyMapper = (state) => {\n    return {\n        modules: state.modules.modules\n    }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        createModule: (courseId) =>\n            service.createModule(courseId, {title: 'New module'})\n            .then(actualModule =>\n                dispatch(createModule(actualModule, courseId))),\n\n        findAllModulesForCourse: (courseId) =>\n            service.findModulesForCourse(courseId)\n            .then(actualModules =>\n                dispatch(findAllModulesForCourse(actualModules))),\n        \n        // TODO: Instead of first getting the modules for course then dispatching the list of modules,\n        // you should instead dispatch something like this:\n        // dispatch({ type: SET_SELECTED_COURSE, courseId: courseId })\n\n        updateModule: (moduleId, module) =>\n            service.updateModule(moduleId, module)\n            .then(updatedModule =>\n                dispatch(updateModule(updatedModule))),\n\n        deleteModule: (moduleId) =>\n            service.deleteModule(moduleId)\n            .then(status =>\n                dispatch(deleteModule(moduleId)))\n    }\n}\n\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper)\n(ModuleListComponent)"]},"metadata":{},"sourceType":"module"}