{"ast":null,"code":"var _jsxFileName = \"/Users/mocaa7/src/git-website/src/containers/CourseManagerContainer.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../components/CourseManager/CourseManager.css';\nimport CourseService from \"../services/CourseService\";\nimport CourseEditorComponentStateful from '../components/CourseEditor/CourseEditorComponentStateful';\nimport CourseListComponent from '../components/CourseManager/CourseListComponent.js';\nconst service = new CourseService();\n\nclass CourseManagerContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      layout: 'table',\n      editingCourse: false,\n      selectedCourseTitle: null,\n      newCourseTitle: 'New Course',\n      courses: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateCourses();\n  }\n\n  async updateCourses() {\n    const courses = await service.findAllCourses();\n    this.setState({\n      courses: courses\n    });\n  }\n\n  async addCourse() {\n    await service.createCourse({\n      title: this.state.newCourseTitle\n    });\n    this.updateCourses();\n  }\n\n  async saveCourse(courseId, course) {\n    await service.updateCourse(courseId, course);\n    await this.updateCourses();\n  }\n\n  onCourseTitleSelect(title) {\n    this.setState({\n      selectedCourseTitle: title\n    });\n  }\n\n  async deleteCourse(deletedCourse) {\n    await service.deleteCourse(deletedCourse._id);\n    const courses = await service.findAllCourses();\n    this.setState({\n      courses: courses\n    });\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      layout: prevState.layout === 'grid' ? 'table' : 'grid'\n    }));\n  }\n\n  updateFormState(event) {\n    this.setState({\n      newCourseTitle: event.target.value\n    });\n  }\n\n  showCourseEditor() {\n    this.setState({\n      editingCourse: true\n    });\n  }\n\n  hideCourseEditor() {\n    this.setState({\n      editingCourse: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/course/:courseId\",\n      exact: true,\n      render: props => React.createElement(CourseEditorComponentStateful, Object.assign({}, props, {\n        courseTitle: this.state.selectedCourseTitle,\n        courseId: props.match.params.courseId,\n        hideCourseEditor: this.hideCourseEditor.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/course/:courseId/module/:moduleId\",\n      exact: true,\n      render: props => React.createElement(CourseEditorComponentStateful, Object.assign({}, props, {\n        courseTitle: this.state.selectedCourseTitle,\n        moduleId: props.match.params.moduleId,\n        courseId: props.match.params.courseId,\n        hideCourseEditor: this.hideCourseEditor.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/course/:courseId/module/:moduleId/lesson/:lessonId\",\n      exact: true,\n      render: props => React.createElement(CourseEditorComponentStateful, Object.assign({}, props, {\n        courseTitle: this.state.selectedCourseTitle,\n        lessonId: props.match.params.lessonId,\n        moduleId: props.match.params.moduleId,\n        courseId: props.match.params.courseId,\n        hideCourseEditor: this.hideCourseEditor.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId\",\n      exact: true,\n      render: props => React.createElement(CourseEditorComponentStateful, Object.assign({}, props, {\n        courseTitle: this.state.selectedCourseTitle,\n        topicId: props.match.params.topicId,\n        lessonId: props.match.params.lessonId,\n        moduleId: props.match.params.moduleId,\n        courseId: props.match.params.courseId,\n        hideCourseEditor: this.hideCourseEditor.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(CourseListComponent, {\n        layout: this.state.layout,\n        saveCourse: this.saveCourse.bind(this),\n        onCourseTitleSelect: this.onCourseTitleSelect.bind(this),\n        updateFormState: this.updateFormState.bind(this),\n        addCourse: this.addCourse.bind(this),\n        toggle: this.toggle.bind(this),\n        courses: this.state.courses,\n        showCourseEditor: this.showCourseEditor.bind(this),\n        deleteCourse: this.deleteCourse.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CourseManagerContainer;","map":{"version":3,"sources":["/Users/mocaa7/src/git-website/src/containers/CourseManagerContainer.js"],"names":["React","BrowserRouter","Router","Route","CourseService","CourseEditorComponentStateful","CourseListComponent","service","CourseManagerContainer","Component","state","layout","editingCourse","selectedCourseTitle","newCourseTitle","courses","componentDidMount","updateCourses","findAllCourses","setState","addCourse","createCourse","title","saveCourse","courseId","course","updateCourse","onCourseTitleSelect","deleteCourse","deletedCourse","_id","toggle","prevState","updateFormState","event","target","value","showCourseEditor","hideCourseEditor","render","props","match","params","bind","moduleId","lessonId","topicId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.css'\nimport '../../node_modules/font-awesome/css/font-awesome.min.css';\nimport '../components/CourseManager/CourseManager.css'\nimport CourseService from \"../services/CourseService\";\nimport CourseEditorComponentStateful\n  from '../components/CourseEditor/CourseEditorComponentStateful';\nimport CourseListComponent\n  from '../components/CourseManager/CourseListComponent.js';\n\nconst service = new CourseService();\n\nclass CourseManagerContainer extends React.Component {\n\n  state = {\n    layout: 'table',\n    editingCourse: false,\n    selectedCourseTitle: null,\n    newCourseTitle: 'New Course',\n    courses: []\n  };\n\n  componentDidMount() {\n    this.updateCourses()\n  };\n\n  async updateCourses() {\n    const courses = await service.findAllCourses();\n    this.setState({ courses: courses });\n  }\n\n  async addCourse() {\n    await service.createCourse({ title: this.state.newCourseTitle });\n    this.updateCourses();\n  }\n\n  async saveCourse(courseId, course) {\n    await service.updateCourse(courseId, course);\n    await this.updateCourses();\n  }\n\n  onCourseTitleSelect(title) {\n    this.setState({ selectedCourseTitle: title });\n  }\n\n  async deleteCourse(deletedCourse) {\n    await service.deleteCourse(deletedCourse._id);\n    const courses = await service.findAllCourses();\n    this.setState({ courses: courses })\n  };\n\n  toggle() {\n    this.setState(prevState => ({\n      layout: prevState.layout === 'grid' ? 'table' : 'grid'\n    }))\n  };\n\n  updateFormState(event) {\n    this.setState({ newCourseTitle: event.target.value });\n  };\n\n  showCourseEditor() {\n    this.setState({ editingCourse: true });\n  }\n\n  hideCourseEditor() {\n    this.setState({ editingCourse: false });\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Router>\n          <Route\n            path=\"/course/:courseId\"\n            exact={true}\n            render={(props) =>\n              <CourseEditorComponentStateful\n                {...props}\n                courseTitle={this.state.selectedCourseTitle}\n                courseId={props.match.params.courseId}\n                hideCourseEditor={this.hideCourseEditor.bind(this)} />\n            } />\n          <Route\n            path=\"/course/:courseId/module/:moduleId\"\n            exact={true}\n            render={(props) =>\n              <CourseEditorComponentStateful\n                {...props}\n                courseTitle={this.state.selectedCourseTitle}\n                moduleId={props.match.params.moduleId}\n                courseId={props.match.params.courseId}\n                hideCourseEditor={this.hideCourseEditor.bind(this)} />\n            } />\n          <Route\n            path=\"/course/:courseId/module/:moduleId/lesson/:lessonId\"\n            exact={true}\n            render={(props) =>\n              <CourseEditorComponentStateful\n                {...props}\n                courseTitle={this.state.selectedCourseTitle}\n                lessonId={props.match.params.lessonId}\n                moduleId={props.match.params.moduleId}\n                courseId={props.match.params.courseId}\n                hideCourseEditor={this.hideCourseEditor.bind(this)} />\n            } />\n          <Route\n            path=\"/course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId\"\n            exact={true}\n            render={(props) =>\n              <CourseEditorComponentStateful\n                {...props}\n                courseTitle={this.state.selectedCourseTitle}\n                topicId={props.match.params.topicId}\n                lessonId={props.match.params.lessonId}\n                moduleId={props.match.params.moduleId}\n                courseId={props.match.params.courseId}\n                hideCourseEditor={this.hideCourseEditor.bind(this)} />\n            } />\n          <Route\n            path=\"/\"\n            exact={true}\n            render={() =>\n              <CourseListComponent\n                layout={this.state.layout}\n                saveCourse={this.saveCourse.bind(this)}\n                onCourseTitleSelect={this.onCourseTitleSelect.bind(this)}\n                updateFormState={this.updateFormState.bind(this)}\n                addCourse={this.addCourse.bind(this)}\n                toggle={this.toggle.bind(this)}\n                courses={this.state.courses}\n                showCourseEditor={this.showCourseEditor.bind(this)}\n                deleteCourse={this.deleteCourse.bind(this)} />\n            } />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default CourseManagerContainer\n"]},"metadata":{},"sourceType":"module"}