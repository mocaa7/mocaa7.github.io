{"ast":null,"code":"import { CREATE_TOPIC, DELETE_TOPIC, UPDATE_TOPIC, SET_SELECTED_LESSON } from \"../actions/topicActions\";\nconst initialState = {\n  topics: []\n};\n\nconst topicReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SELECTED_LESSON:\n      return {\n        lessons: action.lessons\n      };\n\n    case CREATE_TOPIC:\n      return {\n        topics: [...state.topics, action.newLesson]\n      };\n\n    case DELETE_TOPIC:\n      return {\n        topics: state.topics.filter(topic => topic._id !== action.topicId)\n      };\n\n    case UPDATE_TOPIC:\n      return {\n        topics: state.topics.map(topic => topic._id === action.topicId ? action.topic : topic)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default topicReducer;","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/reducers/topicReducer.js"],"names":["CREATE_TOPIC","DELETE_TOPIC","UPDATE_TOPIC","SET_SELECTED_LESSON","initialState","topics","topicReducer","state","action","type","lessons","newLesson","filter","topic","_id","topicId","map"],"mappings":"AAAA,SACEA,YADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,mBAJF,QAKO,yBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,mBAAL;AACE,aAAO;AAACO,QAAAA,OAAO,EAAEF,MAAM,CAACE;AAAjB,OAAP;;AACF,SAAKV,YAAL;AACE,aAAO;AAACK,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBG,MAAM,CAACG,SAAzB;AAAT,OAAP;;AACF,SAAKV,YAAL;AACE,aAAO;AAACI,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaO,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcN,MAAM,CAACO,OAAlD;AAAT,OAAP;;AACF,SAAKb,YAAL;AACE,aAAO;AAACG,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaW,GAAb,CAAiBH,KAAK,IACpCA,KAAK,CAACC,GAAN,KAAcN,MAAM,CAACO,OAArB,GAA+BP,MAAM,CAACK,KAAtC,GAA8CA,KADhC;AAAT,OAAP;;AAEF;AACE,aAAON,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,YAAf","sourcesContent":["import {\n  CREATE_TOPIC,\n  DELETE_TOPIC,\n  UPDATE_TOPIC,\n  SET_SELECTED_LESSON}\n  from \"../actions/topicActions\";\n\nconst initialState = {\n  topics: []\n};\n\nconst topicReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_SELECTED_LESSON:\n      return {lessons: action.lessons};\n    case CREATE_TOPIC:\n      return {topics: [...state.topics, action.newLesson]};\n    case DELETE_TOPIC:\n      return {topics: state.topics.filter(topic => topic._id !== action.topicId)};\n    case UPDATE_TOPIC:\n      return {topics: state.topics.map(topic =>\n        topic._id === action.topicId ? action.topic : topic)};\n    default:\n      return state\n  }\n};\n\nexport default topicReducer"]},"metadata":{},"sourceType":"module"}