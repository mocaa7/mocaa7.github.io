{"ast":null,"code":"export const CREATE_WIDGET = 'CREATE_WIDGET';\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\nexport const FIND_ALL_WIDGETS_FOR_TOPIC = 'FIND_ALL_WIDGETS_FOR_TOPIC';\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\nexport const UPDATE_WIDGET_TYPE = 'UPDATE_WIDGET_TYPE';\nexport const MOVE_WIDGET_UP = 'MOVE_WIDGET_UP';\nexport const MOVE_WIDGET_DOWN = 'MOVE_WIDGET_DOWN';\nexport const SAVE_ALL_WIDGETS = 'SAVE_ALL_WIDGETS';\nexport const createWidget = topicId => ({\n  name: 'New Widget',\n  widgetType: 'Heading',\n  id: new Date().getTime() + \"\",\n  topicId: topicId,\n  type: CREATE_WIDGET\n});\nexport const deleteWidget = widgetId => ({\n  type: DELETE_WIDGET,\n  widgetId: widgetId\n});\nexport const findAllWidgetsForTopic = widgets => ({\n  type: FIND_ALL_WIDGETS_FOR_TOPIC,\n  widgets: widgets\n});\nexport const updateWidget = widget => ({\n  type: UPDATE_WIDGET,\n  widget: widget\n});\nexport const updateWidgetType = (widget, newType) => ({\n  type: UPDATE_WIDGET,\n  widget: widget\n});\nexport const moveWidgetUp = (widget, other) => ({\n  type: MOVE_WIDGET_UP,\n  widget: widget,\n  other: other\n});\nexport const moveWidgetDown = (widget, other) => ({\n  type: MOVE_WIDGET_DOWN,\n  widget: widget,\n  other: other\n});\nexport const saveAllWidgets = widgets => ({\n  widgets: widgets,\n  type: SAVE_ALL_WIDGETS\n});\nexport default {\n  CREATE_WIDGET,\n  DELETE_WIDGET,\n  FIND_ALL_WIDGETS_FOR_TOPIC,\n  UPDATE_WIDGET,\n  UPDATE_WIDGET_TYPE,\n  MOVE_WIDGET_UP,\n  MOVE_WIDGET_DOWN,\n  SAVE_ALL_WIDGETS,\n  deleteWidget,\n  createWidget,\n  findAllWidgetsForTopic,\n  updateWidget,\n  updateWidgetType,\n  moveWidgetUp,\n  moveWidgetDown,\n  saveAllWidgets\n};","map":{"version":3,"sources":["/Users/mocaa7/src/mocaa7/cs5610/wbdv-sp-20-mocaa7-client-react/src/actions/widgetActions.js"],"names":["CREATE_WIDGET","DELETE_WIDGET","FIND_ALL_WIDGETS_FOR_TOPIC","UPDATE_WIDGET","UPDATE_WIDGET_TYPE","MOVE_WIDGET_UP","MOVE_WIDGET_DOWN","SAVE_ALL_WIDGETS","createWidget","topicId","name","widgetType","id","Date","getTime","type","deleteWidget","widgetId","findAllWidgetsForTopic","widgets","updateWidget","widget","updateWidgetType","newType","moveWidgetUp","other","moveWidgetDown","saveAllWidgets"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAGP,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAE,YADkC;AAExCC,EAAAA,UAAU,EAAE,SAF4B;AAGxCC,EAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAuB,EAHc;AAIxCL,EAAAA,OAAO,EAAEA,OAJ+B;AAKxCM,EAAAA,IAAI,EAAEf;AALkC,CAAd,CAArB;AAQP,OAAO,MAAMgB,YAAY,GAAIC,QAAD,KAAe;AACzCF,EAAAA,IAAI,EAAEd,aADmC;AAEzCgB,EAAAA,QAAQ,EAAEA;AAF+B,CAAf,CAArB;AAKP,OAAO,MAAMC,sBAAsB,GAAIC,OAAD,KAAc;AAClDJ,EAAAA,IAAI,EAAEb,0BAD4C;AAElDiB,EAAAA,OAAO,EAAEA;AAFyC,CAAd,CAA/B;AAKP,OAAO,MAAMC,YAAY,GAAIC,MAAD,KAAa;AACvCN,EAAAA,IAAI,EAAEZ,aADiC;AAEvCkB,EAAAA,MAAM,EAAEA;AAF+B,CAAb,CAArB;AAKP,OAAO,MAAMC,gBAAgB,GAAG,CAACD,MAAD,EAASE,OAAT,MAAsB;AACpDR,EAAAA,IAAI,EAAEZ,aAD8C;AAEpDkB,EAAAA,MAAM,EAAEA;AAF4C,CAAtB,CAAzB;AAKP,OAAO,MAAMG,YAAY,GAAG,CAACH,MAAD,EAASI,KAAT,MAAoB;AAC9CV,EAAAA,IAAI,EAAEV,cADwC;AAE9CgB,EAAAA,MAAM,EAAEA,MAFsC;AAG9CI,EAAAA,KAAK,EAAEA;AAHuC,CAApB,CAArB;AAMP,OAAO,MAAMC,cAAc,GAAG,CAACL,MAAD,EAASI,KAAT,MAAoB;AAChDV,EAAAA,IAAI,EAAET,gBAD0C;AAEhDe,EAAAA,MAAM,EAAEA,MAFwC;AAGhDI,EAAAA,KAAK,EAAEA;AAHyC,CAApB,CAAvB;AAMP,OAAO,MAAME,cAAc,GAAIR,OAAD,KAAc;AAC1CA,EAAAA,OAAO,EAAEA,OADiC;AAE1CJ,EAAAA,IAAI,EAAER;AAFoC,CAAd,CAAvB;AAKP,eAAe;AACbP,EAAAA,aADa;AACEC,EAAAA,aADF;AACiBC,EAAAA,0BADjB;AAC6CC,EAAAA,aAD7C;AAC4DC,EAAAA,kBAD5D;AACgFC,EAAAA,cADhF;AACgGC,EAAAA,gBADhG;AACkHC,EAAAA,gBADlH;AAEbS,EAAAA,YAFa;AAECR,EAAAA,YAFD;AAEeU,EAAAA,sBAFf;AAEuCE,EAAAA,YAFvC;AAEqDE,EAAAA,gBAFrD;AAEuEE,EAAAA,YAFvE;AAEqFE,EAAAA,cAFrF;AAEqGC,EAAAA;AAFrG,CAAf","sourcesContent":["export const CREATE_WIDGET = 'CREATE_WIDGET';\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\nexport const FIND_ALL_WIDGETS_FOR_TOPIC = 'FIND_ALL_WIDGETS_FOR_TOPIC';\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\nexport const UPDATE_WIDGET_TYPE = 'UPDATE_WIDGET_TYPE';\nexport const MOVE_WIDGET_UP = 'MOVE_WIDGET_UP';\nexport const MOVE_WIDGET_DOWN = 'MOVE_WIDGET_DOWN';\nexport const SAVE_ALL_WIDGETS = 'SAVE_ALL_WIDGETS';\n\n\nexport const createWidget = (topicId) => ({\n  name: 'New Widget',\n  widgetType: 'Heading',\n  id:(new Date()).getTime()+\"\",\n  topicId: topicId,\n  type: CREATE_WIDGET,\n});\n\nexport const deleteWidget = (widgetId) => ({\n  type: DELETE_WIDGET,\n  widgetId: widgetId,\n});\n\nexport const findAllWidgetsForTopic = (widgets) => ({\n  type: FIND_ALL_WIDGETS_FOR_TOPIC,\n  widgets: widgets\n});\n\nexport const updateWidget = (widget) => ({\n  type: UPDATE_WIDGET,\n  widget: widget\n});\n\nexport const updateWidgetType = (widget, newType) => ({\n  type: UPDATE_WIDGET,\n  widget: widget\n});\n\nexport const moveWidgetUp = (widget, other) => ({\n  type: MOVE_WIDGET_UP,\n  widget: widget,\n  other: other\n});\n\nexport const moveWidgetDown = (widget, other) => ({\n  type: MOVE_WIDGET_DOWN,\n  widget: widget,\n  other: other\n});\n\nexport const saveAllWidgets = (widgets) => ({\n  widgets: widgets,\n  type: SAVE_ALL_WIDGETS\n});\n\nexport default {\n  CREATE_WIDGET, DELETE_WIDGET, FIND_ALL_WIDGETS_FOR_TOPIC, UPDATE_WIDGET, UPDATE_WIDGET_TYPE, MOVE_WIDGET_UP, MOVE_WIDGET_DOWN, SAVE_ALL_WIDGETS,\n  deleteWidget, createWidget, findAllWidgetsForTopic, updateWidget, updateWidgetType, moveWidgetUp, moveWidgetDown, saveAllWidgets\n}"]},"metadata":{},"sourceType":"module"}